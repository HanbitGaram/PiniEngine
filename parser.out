Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> statement statement
Rule 2     statement -> type
Rule 3     statement -> assign
Rule 4     statement -> func_def BLOCK_END
Rule 5     statement -> condition_def BLOCK_END
Rule 6     statement -> bookmark
Rule 7     statement -> goto
Rule 8     function -> LPAREN ID RPAREN
Rule 9     function -> LPAREN ID assign RPAREN
Rule 10    function -> function targ
Rule 11    bookmark -> BOOKMARK ID
Rule 12    goto -> GOTO ID
Rule 13    func_def -> FUNCTION_DEF ID
Rule 14    func_def -> FUNCTION_DEF ID assign
Rule 15    func_def -> func_def statement
Rule 16    condition_def -> CONDITION_DEF type
Rule 17    condition_def -> condition_def statement
Rule 18    condition_def -> condition_def condition_def_else
Rule 19    condition_def_else -> condition_def_else statement
Rule 20    condition_def_else -> CONDITION_ELSE
Rule 21    assign -> ID ASSIGN type
Rule 22    assign -> assign assign
Rule 23    targ -> targ targ
Rule 24    targ -> TABARGU
Rule 25    type -> type PLUS type
Rule 26    type -> type MINUS type
Rule 27    type -> type TIMES type
Rule 28    type -> type DIVIDE type
Rule 29    type -> type GREATERTHEN type
Rule 30    type -> type GREATERTHENEQUAL type
Rule 31    type -> type LESSTHEN type
Rule 32    type -> type LESSTHENEQUAL type
Rule 33    type -> type NEGATION type
Rule 34    type -> type EQUAL type
Rule 35    type -> OLPAREN type ORPAREN
Rule 36    type -> function
Rule 37    type -> STRING
Rule 38    type -> NUMBER
Rule 39    type -> ID

Terminals, with rules where they appear

ASSIGN               : 21
BLOCK_END            : 4 5
BOOKMARK             : 11
CONDITION_DEF        : 16
CONDITION_ELSE       : 20
DIVIDE               : 28
EQUAL                : 34
FUNCTION_DEF         : 13 14
GOTO                 : 12
GREATERTHEN          : 29
GREATERTHENEQUAL     : 30
ID                   : 8 9 11 12 13 14 21 39
LESSTHEN             : 31
LESSTHENEQUAL        : 32
LPAREN               : 8 9
MINUS                : 26
NEGATION             : 33
NUMBER               : 38
OLPAREN              : 35
ORPAREN              : 35
PLUS                 : 25
RPAREN               : 8 9
STRING               : 37
TABARGU              : 24
TIMES                : 27
error                : 

Nonterminals, with rules where they appear

assign               : 3 9 14 22 22
bookmark             : 6
condition_def        : 5 17 18
condition_def_else   : 18 19
func_def             : 4 15
function             : 10 36
goto                 : 7
statement            : 1 1 15 17 19 0
targ                 : 10 23 23
type                 : 2 16 21 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . statement statement
    (2) statement -> . type
    (3) statement -> . assign
    (4) statement -> . func_def BLOCK_END
    (5) statement -> . condition_def BLOCK_END
    (6) statement -> . bookmark
    (7) statement -> . goto
    (25) type -> . type PLUS type
    (26) type -> . type MINUS type
    (27) type -> . type TIMES type
    (28) type -> . type DIVIDE type
    (29) type -> . type GREATERTHEN type
    (30) type -> . type GREATERTHENEQUAL type
    (31) type -> . type LESSTHEN type
    (32) type -> . type LESSTHENEQUAL type
    (33) type -> . type NEGATION type
    (34) type -> . type EQUAL type
    (35) type -> . OLPAREN type ORPAREN
    (36) type -> . function
    (37) type -> . STRING
    (38) type -> . NUMBER
    (39) type -> . ID
    (21) assign -> . ID ASSIGN type
    (22) assign -> . assign assign
    (13) func_def -> . FUNCTION_DEF ID
    (14) func_def -> . FUNCTION_DEF ID assign
    (15) func_def -> . func_def statement
    (16) condition_def -> . CONDITION_DEF type
    (17) condition_def -> . condition_def statement
    (18) condition_def -> . condition_def condition_def_else
    (11) bookmark -> . BOOKMARK ID
    (12) goto -> . GOTO ID
    (8) function -> . LPAREN ID RPAREN
    (9) function -> . LPAREN ID assign RPAREN
    (10) function -> . function targ

    OLPAREN         shift and go to state 15
    STRING          shift and go to state 2
    NUMBER          shift and go to state 11
    ID              shift and go to state 13
    FUNCTION_DEF    shift and go to state 14
    CONDITION_DEF   shift and go to state 1
    BOOKMARK        shift and go to state 4
    GOTO            shift and go to state 8
    LPAREN          shift and go to state 12

    function                       shift and go to state 7
    goto                           shift and go to state 9
    func_def                       shift and go to state 10
    bookmark                       shift and go to state 3
    statement                      shift and go to state 5
    condition_def                  shift and go to state 16
    type                           shift and go to state 6
    assign                         shift and go to state 17

state 1

    (16) condition_def -> CONDITION_DEF . type
    (25) type -> . type PLUS type
    (26) type -> . type MINUS type
    (27) type -> . type TIMES type
    (28) type -> . type DIVIDE type
    (29) type -> . type GREATERTHEN type
    (30) type -> . type GREATERTHENEQUAL type
    (31) type -> . type LESSTHEN type
    (32) type -> . type LESSTHENEQUAL type
    (33) type -> . type NEGATION type
    (34) type -> . type EQUAL type
    (35) type -> . OLPAREN type ORPAREN
    (36) type -> . function
    (37) type -> . STRING
    (38) type -> . NUMBER
    (39) type -> . ID
    (8) function -> . LPAREN ID RPAREN
    (9) function -> . LPAREN ID assign RPAREN
    (10) function -> . function targ

    OLPAREN         shift and go to state 15
    STRING          shift and go to state 2
    NUMBER          shift and go to state 11
    ID              shift and go to state 19
    LPAREN          shift and go to state 12

    function                       shift and go to state 7
    type                           shift and go to state 18

state 2

    (37) type -> STRING .

    PLUS            reduce using rule 37 (type -> STRING .)
    MINUS           reduce using rule 37 (type -> STRING .)
    TIMES           reduce using rule 37 (type -> STRING .)
    DIVIDE          reduce using rule 37 (type -> STRING .)
    GREATERTHEN     reduce using rule 37 (type -> STRING .)
    GREATERTHENEQUAL reduce using rule 37 (type -> STRING .)
    LESSTHEN        reduce using rule 37 (type -> STRING .)
    LESSTHENEQUAL   reduce using rule 37 (type -> STRING .)
    NEGATION        reduce using rule 37 (type -> STRING .)
    EQUAL           reduce using rule 37 (type -> STRING .)
    OLPAREN         reduce using rule 37 (type -> STRING .)
    STRING          reduce using rule 37 (type -> STRING .)
    NUMBER          reduce using rule 37 (type -> STRING .)
    ID              reduce using rule 37 (type -> STRING .)
    FUNCTION_DEF    reduce using rule 37 (type -> STRING .)
    CONDITION_DEF   reduce using rule 37 (type -> STRING .)
    BOOKMARK        reduce using rule 37 (type -> STRING .)
    GOTO            reduce using rule 37 (type -> STRING .)
    LPAREN          reduce using rule 37 (type -> STRING .)
    $end            reduce using rule 37 (type -> STRING .)
    BLOCK_END       reduce using rule 37 (type -> STRING .)
    CONDITION_ELSE  reduce using rule 37 (type -> STRING .)
    ORPAREN         reduce using rule 37 (type -> STRING .)
    RPAREN          reduce using rule 37 (type -> STRING .)


state 3

    (6) statement -> bookmark .

    OLPAREN         reduce using rule 6 (statement -> bookmark .)
    STRING          reduce using rule 6 (statement -> bookmark .)
    NUMBER          reduce using rule 6 (statement -> bookmark .)
    ID              reduce using rule 6 (statement -> bookmark .)
    FUNCTION_DEF    reduce using rule 6 (statement -> bookmark .)
    CONDITION_DEF   reduce using rule 6 (statement -> bookmark .)
    BOOKMARK        reduce using rule 6 (statement -> bookmark .)
    GOTO            reduce using rule 6 (statement -> bookmark .)
    LPAREN          reduce using rule 6 (statement -> bookmark .)
    BLOCK_END       reduce using rule 6 (statement -> bookmark .)
    $end            reduce using rule 6 (statement -> bookmark .)
    CONDITION_ELSE  reduce using rule 6 (statement -> bookmark .)


state 4

    (11) bookmark -> BOOKMARK . ID

    ID              shift and go to state 20


state 5

    (0) S' -> statement .
    (1) statement -> statement . statement
    (1) statement -> . statement statement
    (2) statement -> . type
    (3) statement -> . assign
    (4) statement -> . func_def BLOCK_END
    (5) statement -> . condition_def BLOCK_END
    (6) statement -> . bookmark
    (7) statement -> . goto
    (25) type -> . type PLUS type
    (26) type -> . type MINUS type
    (27) type -> . type TIMES type
    (28) type -> . type DIVIDE type
    (29) type -> . type GREATERTHEN type
    (30) type -> . type GREATERTHENEQUAL type
    (31) type -> . type LESSTHEN type
    (32) type -> . type LESSTHENEQUAL type
    (33) type -> . type NEGATION type
    (34) type -> . type EQUAL type
    (35) type -> . OLPAREN type ORPAREN
    (36) type -> . function
    (37) type -> . STRING
    (38) type -> . NUMBER
    (39) type -> . ID
    (21) assign -> . ID ASSIGN type
    (22) assign -> . assign assign
    (13) func_def -> . FUNCTION_DEF ID
    (14) func_def -> . FUNCTION_DEF ID assign
    (15) func_def -> . func_def statement
    (16) condition_def -> . CONDITION_DEF type
    (17) condition_def -> . condition_def statement
    (18) condition_def -> . condition_def condition_def_else
    (11) bookmark -> . BOOKMARK ID
    (12) goto -> . GOTO ID
    (8) function -> . LPAREN ID RPAREN
    (9) function -> . LPAREN ID assign RPAREN
    (10) function -> . function targ

    OLPAREN         shift and go to state 15
    STRING          shift and go to state 2
    NUMBER          shift and go to state 11
    ID              shift and go to state 13
    FUNCTION_DEF    shift and go to state 14
    CONDITION_DEF   shift and go to state 1
    BOOKMARK        shift and go to state 4
    GOTO            shift and go to state 8
    LPAREN          shift and go to state 12

    function                       shift and go to state 7
    goto                           shift and go to state 9
    func_def                       shift and go to state 10
    bookmark                       shift and go to state 3
    statement                      shift and go to state 21
    condition_def                  shift and go to state 16
    type                           shift and go to state 6
    assign                         shift and go to state 17

state 6

    (2) statement -> type .
    (25) type -> type . PLUS type
    (26) type -> type . MINUS type
    (27) type -> type . TIMES type
    (28) type -> type . DIVIDE type
    (29) type -> type . GREATERTHEN type
    (30) type -> type . GREATERTHENEQUAL type
    (31) type -> type . LESSTHEN type
    (32) type -> type . LESSTHENEQUAL type
    (33) type -> type . NEGATION type
    (34) type -> type . EQUAL type

    OLPAREN         reduce using rule 2 (statement -> type .)
    STRING          reduce using rule 2 (statement -> type .)
    NUMBER          reduce using rule 2 (statement -> type .)
    ID              reduce using rule 2 (statement -> type .)
    FUNCTION_DEF    reduce using rule 2 (statement -> type .)
    CONDITION_DEF   reduce using rule 2 (statement -> type .)
    BOOKMARK        reduce using rule 2 (statement -> type .)
    GOTO            reduce using rule 2 (statement -> type .)
    LPAREN          reduce using rule 2 (statement -> type .)
    BLOCK_END       reduce using rule 2 (statement -> type .)
    $end            reduce using rule 2 (statement -> type .)
    CONDITION_ELSE  reduce using rule 2 (statement -> type .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 31
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 22
    GREATERTHEN     shift and go to state 29
    GREATERTHENEQUAL shift and go to state 27
    LESSTHEN        shift and go to state 25
    LESSTHENEQUAL   shift and go to state 30
    NEGATION        shift and go to state 24
    EQUAL           shift and go to state 23


state 7

    (36) type -> function .
    (10) function -> function . targ
    (23) targ -> . targ targ
    (24) targ -> . TABARGU

    PLUS            reduce using rule 36 (type -> function .)
    MINUS           reduce using rule 36 (type -> function .)
    TIMES           reduce using rule 36 (type -> function .)
    DIVIDE          reduce using rule 36 (type -> function .)
    GREATERTHEN     reduce using rule 36 (type -> function .)
    GREATERTHENEQUAL reduce using rule 36 (type -> function .)
    LESSTHEN        reduce using rule 36 (type -> function .)
    LESSTHENEQUAL   reduce using rule 36 (type -> function .)
    NEGATION        reduce using rule 36 (type -> function .)
    EQUAL           reduce using rule 36 (type -> function .)
    OLPAREN         reduce using rule 36 (type -> function .)
    STRING          reduce using rule 36 (type -> function .)
    NUMBER          reduce using rule 36 (type -> function .)
    ID              reduce using rule 36 (type -> function .)
    FUNCTION_DEF    reduce using rule 36 (type -> function .)
    CONDITION_DEF   reduce using rule 36 (type -> function .)
    BOOKMARK        reduce using rule 36 (type -> function .)
    GOTO            reduce using rule 36 (type -> function .)
    LPAREN          reduce using rule 36 (type -> function .)
    $end            reduce using rule 36 (type -> function .)
    BLOCK_END       reduce using rule 36 (type -> function .)
    CONDITION_ELSE  reduce using rule 36 (type -> function .)
    ORPAREN         reduce using rule 36 (type -> function .)
    RPAREN          reduce using rule 36 (type -> function .)
    TABARGU         shift and go to state 33

    targ                           shift and go to state 32

state 8

    (12) goto -> GOTO . ID

    ID              shift and go to state 34


state 9

    (7) statement -> goto .

    OLPAREN         reduce using rule 7 (statement -> goto .)
    STRING          reduce using rule 7 (statement -> goto .)
    NUMBER          reduce using rule 7 (statement -> goto .)
    ID              reduce using rule 7 (statement -> goto .)
    FUNCTION_DEF    reduce using rule 7 (statement -> goto .)
    CONDITION_DEF   reduce using rule 7 (statement -> goto .)
    BOOKMARK        reduce using rule 7 (statement -> goto .)
    GOTO            reduce using rule 7 (statement -> goto .)
    LPAREN          reduce using rule 7 (statement -> goto .)
    BLOCK_END       reduce using rule 7 (statement -> goto .)
    $end            reduce using rule 7 (statement -> goto .)
    CONDITION_ELSE  reduce using rule 7 (statement -> goto .)


state 10

    (4) statement -> func_def . BLOCK_END
    (15) func_def -> func_def . statement
    (1) statement -> . statement statement
    (2) statement -> . type
    (3) statement -> . assign
    (4) statement -> . func_def BLOCK_END
    (5) statement -> . condition_def BLOCK_END
    (6) statement -> . bookmark
    (7) statement -> . goto
    (25) type -> . type PLUS type
    (26) type -> . type MINUS type
    (27) type -> . type TIMES type
    (28) type -> . type DIVIDE type
    (29) type -> . type GREATERTHEN type
    (30) type -> . type GREATERTHENEQUAL type
    (31) type -> . type LESSTHEN type
    (32) type -> . type LESSTHENEQUAL type
    (33) type -> . type NEGATION type
    (34) type -> . type EQUAL type
    (35) type -> . OLPAREN type ORPAREN
    (36) type -> . function
    (37) type -> . STRING
    (38) type -> . NUMBER
    (39) type -> . ID
    (21) assign -> . ID ASSIGN type
    (22) assign -> . assign assign
    (13) func_def -> . FUNCTION_DEF ID
    (14) func_def -> . FUNCTION_DEF ID assign
    (15) func_def -> . func_def statement
    (16) condition_def -> . CONDITION_DEF type
    (17) condition_def -> . condition_def statement
    (18) condition_def -> . condition_def condition_def_else
    (11) bookmark -> . BOOKMARK ID
    (12) goto -> . GOTO ID
    (8) function -> . LPAREN ID RPAREN
    (9) function -> . LPAREN ID assign RPAREN
    (10) function -> . function targ

    BLOCK_END       shift and go to state 35
    OLPAREN         shift and go to state 15
    STRING          shift and go to state 2
    NUMBER          shift and go to state 11
    ID              shift and go to state 13
    FUNCTION_DEF    shift and go to state 14
    CONDITION_DEF   shift and go to state 1
    BOOKMARK        shift and go to state 4
    GOTO            shift and go to state 8
    LPAREN          shift and go to state 12

    function                       shift and go to state 7
    goto                           shift and go to state 9
    func_def                       shift and go to state 10
    bookmark                       shift and go to state 3
    statement                      shift and go to state 36
    condition_def                  shift and go to state 16
    type                           shift and go to state 6
    assign                         shift and go to state 17

state 11

    (38) type -> NUMBER .

    PLUS            reduce using rule 38 (type -> NUMBER .)
    MINUS           reduce using rule 38 (type -> NUMBER .)
    TIMES           reduce using rule 38 (type -> NUMBER .)
    DIVIDE          reduce using rule 38 (type -> NUMBER .)
    GREATERTHEN     reduce using rule 38 (type -> NUMBER .)
    GREATERTHENEQUAL reduce using rule 38 (type -> NUMBER .)
    LESSTHEN        reduce using rule 38 (type -> NUMBER .)
    LESSTHENEQUAL   reduce using rule 38 (type -> NUMBER .)
    NEGATION        reduce using rule 38 (type -> NUMBER .)
    EQUAL           reduce using rule 38 (type -> NUMBER .)
    OLPAREN         reduce using rule 38 (type -> NUMBER .)
    STRING          reduce using rule 38 (type -> NUMBER .)
    NUMBER          reduce using rule 38 (type -> NUMBER .)
    ID              reduce using rule 38 (type -> NUMBER .)
    FUNCTION_DEF    reduce using rule 38 (type -> NUMBER .)
    CONDITION_DEF   reduce using rule 38 (type -> NUMBER .)
    BOOKMARK        reduce using rule 38 (type -> NUMBER .)
    GOTO            reduce using rule 38 (type -> NUMBER .)
    LPAREN          reduce using rule 38 (type -> NUMBER .)
    $end            reduce using rule 38 (type -> NUMBER .)
    BLOCK_END       reduce using rule 38 (type -> NUMBER .)
    CONDITION_ELSE  reduce using rule 38 (type -> NUMBER .)
    ORPAREN         reduce using rule 38 (type -> NUMBER .)
    RPAREN          reduce using rule 38 (type -> NUMBER .)


state 12

    (8) function -> LPAREN . ID RPAREN
    (9) function -> LPAREN . ID assign RPAREN

    ID              shift and go to state 37


state 13

    (39) type -> ID .
    (21) assign -> ID . ASSIGN type

    PLUS            reduce using rule 39 (type -> ID .)
    MINUS           reduce using rule 39 (type -> ID .)
    TIMES           reduce using rule 39 (type -> ID .)
    DIVIDE          reduce using rule 39 (type -> ID .)
    GREATERTHEN     reduce using rule 39 (type -> ID .)
    GREATERTHENEQUAL reduce using rule 39 (type -> ID .)
    LESSTHEN        reduce using rule 39 (type -> ID .)
    LESSTHENEQUAL   reduce using rule 39 (type -> ID .)
    NEGATION        reduce using rule 39 (type -> ID .)
    EQUAL           reduce using rule 39 (type -> ID .)
    OLPAREN         reduce using rule 39 (type -> ID .)
    STRING          reduce using rule 39 (type -> ID .)
    NUMBER          reduce using rule 39 (type -> ID .)
    ID              reduce using rule 39 (type -> ID .)
    FUNCTION_DEF    reduce using rule 39 (type -> ID .)
    CONDITION_DEF   reduce using rule 39 (type -> ID .)
    BOOKMARK        reduce using rule 39 (type -> ID .)
    GOTO            reduce using rule 39 (type -> ID .)
    LPAREN          reduce using rule 39 (type -> ID .)
    BLOCK_END       reduce using rule 39 (type -> ID .)
    $end            reduce using rule 39 (type -> ID .)
    CONDITION_ELSE  reduce using rule 39 (type -> ID .)
    ASSIGN          shift and go to state 38


state 14

    (13) func_def -> FUNCTION_DEF . ID
    (14) func_def -> FUNCTION_DEF . ID assign

    ID              shift and go to state 39


state 15

    (35) type -> OLPAREN . type ORPAREN
    (25) type -> . type PLUS type
    (26) type -> . type MINUS type
    (27) type -> . type TIMES type
    (28) type -> . type DIVIDE type
    (29) type -> . type GREATERTHEN type
    (30) type -> . type GREATERTHENEQUAL type
    (31) type -> . type LESSTHEN type
    (32) type -> . type LESSTHENEQUAL type
    (33) type -> . type NEGATION type
    (34) type -> . type EQUAL type
    (35) type -> . OLPAREN type ORPAREN
    (36) type -> . function
    (37) type -> . STRING
    (38) type -> . NUMBER
    (39) type -> . ID
    (8) function -> . LPAREN ID RPAREN
    (9) function -> . LPAREN ID assign RPAREN
    (10) function -> . function targ

    OLPAREN         shift and go to state 15
    STRING          shift and go to state 2
    NUMBER          shift and go to state 11
    ID              shift and go to state 19
    LPAREN          shift and go to state 12

    function                       shift and go to state 7
    type                           shift and go to state 40

state 16

    (5) statement -> condition_def . BLOCK_END
    (17) condition_def -> condition_def . statement
    (18) condition_def -> condition_def . condition_def_else
    (1) statement -> . statement statement
    (2) statement -> . type
    (3) statement -> . assign
    (4) statement -> . func_def BLOCK_END
    (5) statement -> . condition_def BLOCK_END
    (6) statement -> . bookmark
    (7) statement -> . goto
    (19) condition_def_else -> . condition_def_else statement
    (20) condition_def_else -> . CONDITION_ELSE
    (25) type -> . type PLUS type
    (26) type -> . type MINUS type
    (27) type -> . type TIMES type
    (28) type -> . type DIVIDE type
    (29) type -> . type GREATERTHEN type
    (30) type -> . type GREATERTHENEQUAL type
    (31) type -> . type LESSTHEN type
    (32) type -> . type LESSTHENEQUAL type
    (33) type -> . type NEGATION type
    (34) type -> . type EQUAL type
    (35) type -> . OLPAREN type ORPAREN
    (36) type -> . function
    (37) type -> . STRING
    (38) type -> . NUMBER
    (39) type -> . ID
    (21) assign -> . ID ASSIGN type
    (22) assign -> . assign assign
    (13) func_def -> . FUNCTION_DEF ID
    (14) func_def -> . FUNCTION_DEF ID assign
    (15) func_def -> . func_def statement
    (16) condition_def -> . CONDITION_DEF type
    (17) condition_def -> . condition_def statement
    (18) condition_def -> . condition_def condition_def_else
    (11) bookmark -> . BOOKMARK ID
    (12) goto -> . GOTO ID
    (8) function -> . LPAREN ID RPAREN
    (9) function -> . LPAREN ID assign RPAREN
    (10) function -> . function targ

    BLOCK_END       shift and go to state 41
    CONDITION_ELSE  shift and go to state 42
    OLPAREN         shift and go to state 15
    STRING          shift and go to state 2
    NUMBER          shift and go to state 11
    ID              shift and go to state 13
    FUNCTION_DEF    shift and go to state 14
    CONDITION_DEF   shift and go to state 1
    BOOKMARK        shift and go to state 4
    GOTO            shift and go to state 8
    LPAREN          shift and go to state 12

    function                       shift and go to state 7
    goto                           shift and go to state 9
    func_def                       shift and go to state 10
    bookmark                       shift and go to state 3
    condition_def_else             shift and go to state 44
    statement                      shift and go to state 43
    condition_def                  shift and go to state 16
    type                           shift and go to state 6
    assign                         shift and go to state 17

state 17

    (3) statement -> assign .
    (22) assign -> assign . assign
    (21) assign -> . ID ASSIGN type
    (22) assign -> . assign assign

  ! shift/reduce conflict for ID resolved as shift
    OLPAREN         reduce using rule 3 (statement -> assign .)
    STRING          reduce using rule 3 (statement -> assign .)
    NUMBER          reduce using rule 3 (statement -> assign .)
    FUNCTION_DEF    reduce using rule 3 (statement -> assign .)
    CONDITION_DEF   reduce using rule 3 (statement -> assign .)
    BOOKMARK        reduce using rule 3 (statement -> assign .)
    GOTO            reduce using rule 3 (statement -> assign .)
    LPAREN          reduce using rule 3 (statement -> assign .)
    BLOCK_END       reduce using rule 3 (statement -> assign .)
    $end            reduce using rule 3 (statement -> assign .)
    CONDITION_ELSE  reduce using rule 3 (statement -> assign .)
    ID              shift and go to state 46

  ! ID              [ reduce using rule 3 (statement -> assign .) ]

    assign                         shift and go to state 45

state 18

    (16) condition_def -> CONDITION_DEF type .
    (25) type -> type . PLUS type
    (26) type -> type . MINUS type
    (27) type -> type . TIMES type
    (28) type -> type . DIVIDE type
    (29) type -> type . GREATERTHEN type
    (30) type -> type . GREATERTHENEQUAL type
    (31) type -> type . LESSTHEN type
    (32) type -> type . LESSTHENEQUAL type
    (33) type -> type . NEGATION type
    (34) type -> type . EQUAL type

    BLOCK_END       reduce using rule 16 (condition_def -> CONDITION_DEF type .)
    CONDITION_ELSE  reduce using rule 16 (condition_def -> CONDITION_DEF type .)
    OLPAREN         reduce using rule 16 (condition_def -> CONDITION_DEF type .)
    STRING          reduce using rule 16 (condition_def -> CONDITION_DEF type .)
    NUMBER          reduce using rule 16 (condition_def -> CONDITION_DEF type .)
    ID              reduce using rule 16 (condition_def -> CONDITION_DEF type .)
    FUNCTION_DEF    reduce using rule 16 (condition_def -> CONDITION_DEF type .)
    CONDITION_DEF   reduce using rule 16 (condition_def -> CONDITION_DEF type .)
    BOOKMARK        reduce using rule 16 (condition_def -> CONDITION_DEF type .)
    GOTO            reduce using rule 16 (condition_def -> CONDITION_DEF type .)
    LPAREN          reduce using rule 16 (condition_def -> CONDITION_DEF type .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 31
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 22
    GREATERTHEN     shift and go to state 29
    GREATERTHENEQUAL shift and go to state 27
    LESSTHEN        shift and go to state 25
    LESSTHENEQUAL   shift and go to state 30
    NEGATION        shift and go to state 24
    EQUAL           shift and go to state 23


state 19

    (39) type -> ID .

    PLUS            reduce using rule 39 (type -> ID .)
    MINUS           reduce using rule 39 (type -> ID .)
    TIMES           reduce using rule 39 (type -> ID .)
    DIVIDE          reduce using rule 39 (type -> ID .)
    GREATERTHEN     reduce using rule 39 (type -> ID .)
    GREATERTHENEQUAL reduce using rule 39 (type -> ID .)
    LESSTHEN        reduce using rule 39 (type -> ID .)
    LESSTHENEQUAL   reduce using rule 39 (type -> ID .)
    NEGATION        reduce using rule 39 (type -> ID .)
    EQUAL           reduce using rule 39 (type -> ID .)
    OLPAREN         reduce using rule 39 (type -> ID .)
    STRING          reduce using rule 39 (type -> ID .)
    NUMBER          reduce using rule 39 (type -> ID .)
    ID              reduce using rule 39 (type -> ID .)
    FUNCTION_DEF    reduce using rule 39 (type -> ID .)
    CONDITION_DEF   reduce using rule 39 (type -> ID .)
    BOOKMARK        reduce using rule 39 (type -> ID .)
    GOTO            reduce using rule 39 (type -> ID .)
    LPAREN          reduce using rule 39 (type -> ID .)
    $end            reduce using rule 39 (type -> ID .)
    BLOCK_END       reduce using rule 39 (type -> ID .)
    CONDITION_ELSE  reduce using rule 39 (type -> ID .)
    ORPAREN         reduce using rule 39 (type -> ID .)
    RPAREN          reduce using rule 39 (type -> ID .)


state 20

    (11) bookmark -> BOOKMARK ID .

    OLPAREN         reduce using rule 11 (bookmark -> BOOKMARK ID .)
    STRING          reduce using rule 11 (bookmark -> BOOKMARK ID .)
    NUMBER          reduce using rule 11 (bookmark -> BOOKMARK ID .)
    ID              reduce using rule 11 (bookmark -> BOOKMARK ID .)
    FUNCTION_DEF    reduce using rule 11 (bookmark -> BOOKMARK ID .)
    CONDITION_DEF   reduce using rule 11 (bookmark -> BOOKMARK ID .)
    BOOKMARK        reduce using rule 11 (bookmark -> BOOKMARK ID .)
    GOTO            reduce using rule 11 (bookmark -> BOOKMARK ID .)
    LPAREN          reduce using rule 11 (bookmark -> BOOKMARK ID .)
    $end            reduce using rule 11 (bookmark -> BOOKMARK ID .)
    BLOCK_END       reduce using rule 11 (bookmark -> BOOKMARK ID .)
    CONDITION_ELSE  reduce using rule 11 (bookmark -> BOOKMARK ID .)


state 21

    (1) statement -> statement statement .
    (1) statement -> statement . statement
    (1) statement -> . statement statement
    (2) statement -> . type
    (3) statement -> . assign
    (4) statement -> . func_def BLOCK_END
    (5) statement -> . condition_def BLOCK_END
    (6) statement -> . bookmark
    (7) statement -> . goto
    (25) type -> . type PLUS type
    (26) type -> . type MINUS type
    (27) type -> . type TIMES type
    (28) type -> . type DIVIDE type
    (29) type -> . type GREATERTHEN type
    (30) type -> . type GREATERTHENEQUAL type
    (31) type -> . type LESSTHEN type
    (32) type -> . type LESSTHENEQUAL type
    (33) type -> . type NEGATION type
    (34) type -> . type EQUAL type
    (35) type -> . OLPAREN type ORPAREN
    (36) type -> . function
    (37) type -> . STRING
    (38) type -> . NUMBER
    (39) type -> . ID
    (21) assign -> . ID ASSIGN type
    (22) assign -> . assign assign
    (13) func_def -> . FUNCTION_DEF ID
    (14) func_def -> . FUNCTION_DEF ID assign
    (15) func_def -> . func_def statement
    (16) condition_def -> . CONDITION_DEF type
    (17) condition_def -> . condition_def statement
    (18) condition_def -> . condition_def condition_def_else
    (11) bookmark -> . BOOKMARK ID
    (12) goto -> . GOTO ID
    (8) function -> . LPAREN ID RPAREN
    (9) function -> . LPAREN ID assign RPAREN
    (10) function -> . function targ

  ! shift/reduce conflict for OLPAREN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for FUNCTION_DEF resolved as shift
  ! shift/reduce conflict for CONDITION_DEF resolved as shift
  ! shift/reduce conflict for BOOKMARK resolved as shift
  ! shift/reduce conflict for GOTO resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    BLOCK_END       reduce using rule 1 (statement -> statement statement .)
    $end            reduce using rule 1 (statement -> statement statement .)
    CONDITION_ELSE  reduce using rule 1 (statement -> statement statement .)
    OLPAREN         shift and go to state 15
    STRING          shift and go to state 2
    NUMBER          shift and go to state 11
    ID              shift and go to state 13
    FUNCTION_DEF    shift and go to state 14
    CONDITION_DEF   shift and go to state 1
    BOOKMARK        shift and go to state 4
    GOTO            shift and go to state 8
    LPAREN          shift and go to state 12

  ! OLPAREN         [ reduce using rule 1 (statement -> statement statement .) ]
  ! STRING          [ reduce using rule 1 (statement -> statement statement .) ]
  ! NUMBER          [ reduce using rule 1 (statement -> statement statement .) ]
  ! ID              [ reduce using rule 1 (statement -> statement statement .) ]
  ! FUNCTION_DEF    [ reduce using rule 1 (statement -> statement statement .) ]
  ! CONDITION_DEF   [ reduce using rule 1 (statement -> statement statement .) ]
  ! BOOKMARK        [ reduce using rule 1 (statement -> statement statement .) ]
  ! GOTO            [ reduce using rule 1 (statement -> statement statement .) ]
  ! LPAREN          [ reduce using rule 1 (statement -> statement statement .) ]

    function                       shift and go to state 7
    goto                           shift and go to state 9
    func_def                       shift and go to state 10
    bookmark                       shift and go to state 3
    statement                      shift and go to state 21
    condition_def                  shift and go to state 16
    type                           shift and go to state 6
    assign                         shift and go to state 17

state 22

    (28) type -> type DIVIDE . type
    (25) type -> . type PLUS type
    (26) type -> . type MINUS type
    (27) type -> . type TIMES type
    (28) type -> . type DIVIDE type
    (29) type -> . type GREATERTHEN type
    (30) type -> . type GREATERTHENEQUAL type
    (31) type -> . type LESSTHEN type
    (32) type -> . type LESSTHENEQUAL type
    (33) type -> . type NEGATION type
    (34) type -> . type EQUAL type
    (35) type -> . OLPAREN type ORPAREN
    (36) type -> . function
    (37) type -> . STRING
    (38) type -> . NUMBER
    (39) type -> . ID
    (8) function -> . LPAREN ID RPAREN
    (9) function -> . LPAREN ID assign RPAREN
    (10) function -> . function targ

    OLPAREN         shift and go to state 15
    STRING          shift and go to state 2
    NUMBER          shift and go to state 11
    ID              shift and go to state 19
    LPAREN          shift and go to state 12

    function                       shift and go to state 7
    type                           shift and go to state 47

state 23

    (34) type -> type EQUAL . type
    (25) type -> . type PLUS type
    (26) type -> . type MINUS type
    (27) type -> . type TIMES type
    (28) type -> . type DIVIDE type
    (29) type -> . type GREATERTHEN type
    (30) type -> . type GREATERTHENEQUAL type
    (31) type -> . type LESSTHEN type
    (32) type -> . type LESSTHENEQUAL type
    (33) type -> . type NEGATION type
    (34) type -> . type EQUAL type
    (35) type -> . OLPAREN type ORPAREN
    (36) type -> . function
    (37) type -> . STRING
    (38) type -> . NUMBER
    (39) type -> . ID
    (8) function -> . LPAREN ID RPAREN
    (9) function -> . LPAREN ID assign RPAREN
    (10) function -> . function targ

    OLPAREN         shift and go to state 15
    STRING          shift and go to state 2
    NUMBER          shift and go to state 11
    ID              shift and go to state 19
    LPAREN          shift and go to state 12

    function                       shift and go to state 7
    type                           shift and go to state 48

state 24

    (33) type -> type NEGATION . type
    (25) type -> . type PLUS type
    (26) type -> . type MINUS type
    (27) type -> . type TIMES type
    (28) type -> . type DIVIDE type
    (29) type -> . type GREATERTHEN type
    (30) type -> . type GREATERTHENEQUAL type
    (31) type -> . type LESSTHEN type
    (32) type -> . type LESSTHENEQUAL type
    (33) type -> . type NEGATION type
    (34) type -> . type EQUAL type
    (35) type -> . OLPAREN type ORPAREN
    (36) type -> . function
    (37) type -> . STRING
    (38) type -> . NUMBER
    (39) type -> . ID
    (8) function -> . LPAREN ID RPAREN
    (9) function -> . LPAREN ID assign RPAREN
    (10) function -> . function targ

    OLPAREN         shift and go to state 15
    STRING          shift and go to state 2
    NUMBER          shift and go to state 11
    ID              shift and go to state 19
    LPAREN          shift and go to state 12

    function                       shift and go to state 7
    type                           shift and go to state 49

state 25

    (31) type -> type LESSTHEN . type
    (25) type -> . type PLUS type
    (26) type -> . type MINUS type
    (27) type -> . type TIMES type
    (28) type -> . type DIVIDE type
    (29) type -> . type GREATERTHEN type
    (30) type -> . type GREATERTHENEQUAL type
    (31) type -> . type LESSTHEN type
    (32) type -> . type LESSTHENEQUAL type
    (33) type -> . type NEGATION type
    (34) type -> . type EQUAL type
    (35) type -> . OLPAREN type ORPAREN
    (36) type -> . function
    (37) type -> . STRING
    (38) type -> . NUMBER
    (39) type -> . ID
    (8) function -> . LPAREN ID RPAREN
    (9) function -> . LPAREN ID assign RPAREN
    (10) function -> . function targ

    OLPAREN         shift and go to state 15
    STRING          shift and go to state 2
    NUMBER          shift and go to state 11
    ID              shift and go to state 19
    LPAREN          shift and go to state 12

    function                       shift and go to state 7
    type                           shift and go to state 50

state 26

    (27) type -> type TIMES . type
    (25) type -> . type PLUS type
    (26) type -> . type MINUS type
    (27) type -> . type TIMES type
    (28) type -> . type DIVIDE type
    (29) type -> . type GREATERTHEN type
    (30) type -> . type GREATERTHENEQUAL type
    (31) type -> . type LESSTHEN type
    (32) type -> . type LESSTHENEQUAL type
    (33) type -> . type NEGATION type
    (34) type -> . type EQUAL type
    (35) type -> . OLPAREN type ORPAREN
    (36) type -> . function
    (37) type -> . STRING
    (38) type -> . NUMBER
    (39) type -> . ID
    (8) function -> . LPAREN ID RPAREN
    (9) function -> . LPAREN ID assign RPAREN
    (10) function -> . function targ

    OLPAREN         shift and go to state 15
    STRING          shift and go to state 2
    NUMBER          shift and go to state 11
    ID              shift and go to state 19
    LPAREN          shift and go to state 12

    function                       shift and go to state 7
    type                           shift and go to state 51

state 27

    (30) type -> type GREATERTHENEQUAL . type
    (25) type -> . type PLUS type
    (26) type -> . type MINUS type
    (27) type -> . type TIMES type
    (28) type -> . type DIVIDE type
    (29) type -> . type GREATERTHEN type
    (30) type -> . type GREATERTHENEQUAL type
    (31) type -> . type LESSTHEN type
    (32) type -> . type LESSTHENEQUAL type
    (33) type -> . type NEGATION type
    (34) type -> . type EQUAL type
    (35) type -> . OLPAREN type ORPAREN
    (36) type -> . function
    (37) type -> . STRING
    (38) type -> . NUMBER
    (39) type -> . ID
    (8) function -> . LPAREN ID RPAREN
    (9) function -> . LPAREN ID assign RPAREN
    (10) function -> . function targ

    OLPAREN         shift and go to state 15
    STRING          shift and go to state 2
    NUMBER          shift and go to state 11
    ID              shift and go to state 19
    LPAREN          shift and go to state 12

    function                       shift and go to state 7
    type                           shift and go to state 52

state 28

    (25) type -> type PLUS . type
    (25) type -> . type PLUS type
    (26) type -> . type MINUS type
    (27) type -> . type TIMES type
    (28) type -> . type DIVIDE type
    (29) type -> . type GREATERTHEN type
    (30) type -> . type GREATERTHENEQUAL type
    (31) type -> . type LESSTHEN type
    (32) type -> . type LESSTHENEQUAL type
    (33) type -> . type NEGATION type
    (34) type -> . type EQUAL type
    (35) type -> . OLPAREN type ORPAREN
    (36) type -> . function
    (37) type -> . STRING
    (38) type -> . NUMBER
    (39) type -> . ID
    (8) function -> . LPAREN ID RPAREN
    (9) function -> . LPAREN ID assign RPAREN
    (10) function -> . function targ

    OLPAREN         shift and go to state 15
    STRING          shift and go to state 2
    NUMBER          shift and go to state 11
    ID              shift and go to state 19
    LPAREN          shift and go to state 12

    function                       shift and go to state 7
    type                           shift and go to state 53

state 29

    (29) type -> type GREATERTHEN . type
    (25) type -> . type PLUS type
    (26) type -> . type MINUS type
    (27) type -> . type TIMES type
    (28) type -> . type DIVIDE type
    (29) type -> . type GREATERTHEN type
    (30) type -> . type GREATERTHENEQUAL type
    (31) type -> . type LESSTHEN type
    (32) type -> . type LESSTHENEQUAL type
    (33) type -> . type NEGATION type
    (34) type -> . type EQUAL type
    (35) type -> . OLPAREN type ORPAREN
    (36) type -> . function
    (37) type -> . STRING
    (38) type -> . NUMBER
    (39) type -> . ID
    (8) function -> . LPAREN ID RPAREN
    (9) function -> . LPAREN ID assign RPAREN
    (10) function -> . function targ

    OLPAREN         shift and go to state 15
    STRING          shift and go to state 2
    NUMBER          shift and go to state 11
    ID              shift and go to state 19
    LPAREN          shift and go to state 12

    function                       shift and go to state 7
    type                           shift and go to state 54

state 30

    (32) type -> type LESSTHENEQUAL . type
    (25) type -> . type PLUS type
    (26) type -> . type MINUS type
    (27) type -> . type TIMES type
    (28) type -> . type DIVIDE type
    (29) type -> . type GREATERTHEN type
    (30) type -> . type GREATERTHENEQUAL type
    (31) type -> . type LESSTHEN type
    (32) type -> . type LESSTHENEQUAL type
    (33) type -> . type NEGATION type
    (34) type -> . type EQUAL type
    (35) type -> . OLPAREN type ORPAREN
    (36) type -> . function
    (37) type -> . STRING
    (38) type -> . NUMBER
    (39) type -> . ID
    (8) function -> . LPAREN ID RPAREN
    (9) function -> . LPAREN ID assign RPAREN
    (10) function -> . function targ

    OLPAREN         shift and go to state 15
    STRING          shift and go to state 2
    NUMBER          shift and go to state 11
    ID              shift and go to state 19
    LPAREN          shift and go to state 12

    function                       shift and go to state 7
    type                           shift and go to state 55

state 31

    (26) type -> type MINUS . type
    (25) type -> . type PLUS type
    (26) type -> . type MINUS type
    (27) type -> . type TIMES type
    (28) type -> . type DIVIDE type
    (29) type -> . type GREATERTHEN type
    (30) type -> . type GREATERTHENEQUAL type
    (31) type -> . type LESSTHEN type
    (32) type -> . type LESSTHENEQUAL type
    (33) type -> . type NEGATION type
    (34) type -> . type EQUAL type
    (35) type -> . OLPAREN type ORPAREN
    (36) type -> . function
    (37) type -> . STRING
    (38) type -> . NUMBER
    (39) type -> . ID
    (8) function -> . LPAREN ID RPAREN
    (9) function -> . LPAREN ID assign RPAREN
    (10) function -> . function targ

    OLPAREN         shift and go to state 15
    STRING          shift and go to state 2
    NUMBER          shift and go to state 11
    ID              shift and go to state 19
    LPAREN          shift and go to state 12

    function                       shift and go to state 7
    type                           shift and go to state 56

state 32

    (10) function -> function targ .
    (23) targ -> targ . targ
    (23) targ -> . targ targ
    (24) targ -> . TABARGU

  ! shift/reduce conflict for TABARGU resolved as shift
    PLUS            reduce using rule 10 (function -> function targ .)
    MINUS           reduce using rule 10 (function -> function targ .)
    TIMES           reduce using rule 10 (function -> function targ .)
    DIVIDE          reduce using rule 10 (function -> function targ .)
    GREATERTHEN     reduce using rule 10 (function -> function targ .)
    GREATERTHENEQUAL reduce using rule 10 (function -> function targ .)
    LESSTHEN        reduce using rule 10 (function -> function targ .)
    LESSTHENEQUAL   reduce using rule 10 (function -> function targ .)
    NEGATION        reduce using rule 10 (function -> function targ .)
    EQUAL           reduce using rule 10 (function -> function targ .)
    OLPAREN         reduce using rule 10 (function -> function targ .)
    STRING          reduce using rule 10 (function -> function targ .)
    NUMBER          reduce using rule 10 (function -> function targ .)
    ID              reduce using rule 10 (function -> function targ .)
    FUNCTION_DEF    reduce using rule 10 (function -> function targ .)
    CONDITION_DEF   reduce using rule 10 (function -> function targ .)
    BOOKMARK        reduce using rule 10 (function -> function targ .)
    GOTO            reduce using rule 10 (function -> function targ .)
    LPAREN          reduce using rule 10 (function -> function targ .)
    $end            reduce using rule 10 (function -> function targ .)
    BLOCK_END       reduce using rule 10 (function -> function targ .)
    CONDITION_ELSE  reduce using rule 10 (function -> function targ .)
    ORPAREN         reduce using rule 10 (function -> function targ .)
    RPAREN          reduce using rule 10 (function -> function targ .)
    TABARGU         shift and go to state 33

  ! TABARGU         [ reduce using rule 10 (function -> function targ .) ]

    targ                           shift and go to state 57

state 33

    (24) targ -> TABARGU .

    TABARGU         reduce using rule 24 (targ -> TABARGU .)
    PLUS            reduce using rule 24 (targ -> TABARGU .)
    MINUS           reduce using rule 24 (targ -> TABARGU .)
    TIMES           reduce using rule 24 (targ -> TABARGU .)
    DIVIDE          reduce using rule 24 (targ -> TABARGU .)
    GREATERTHEN     reduce using rule 24 (targ -> TABARGU .)
    GREATERTHENEQUAL reduce using rule 24 (targ -> TABARGU .)
    LESSTHEN        reduce using rule 24 (targ -> TABARGU .)
    LESSTHENEQUAL   reduce using rule 24 (targ -> TABARGU .)
    NEGATION        reduce using rule 24 (targ -> TABARGU .)
    EQUAL           reduce using rule 24 (targ -> TABARGU .)
    OLPAREN         reduce using rule 24 (targ -> TABARGU .)
    STRING          reduce using rule 24 (targ -> TABARGU .)
    NUMBER          reduce using rule 24 (targ -> TABARGU .)
    ID              reduce using rule 24 (targ -> TABARGU .)
    FUNCTION_DEF    reduce using rule 24 (targ -> TABARGU .)
    CONDITION_DEF   reduce using rule 24 (targ -> TABARGU .)
    BOOKMARK        reduce using rule 24 (targ -> TABARGU .)
    GOTO            reduce using rule 24 (targ -> TABARGU .)
    LPAREN          reduce using rule 24 (targ -> TABARGU .)
    $end            reduce using rule 24 (targ -> TABARGU .)
    BLOCK_END       reduce using rule 24 (targ -> TABARGU .)
    CONDITION_ELSE  reduce using rule 24 (targ -> TABARGU .)
    ORPAREN         reduce using rule 24 (targ -> TABARGU .)
    RPAREN          reduce using rule 24 (targ -> TABARGU .)


state 34

    (12) goto -> GOTO ID .

    OLPAREN         reduce using rule 12 (goto -> GOTO ID .)
    STRING          reduce using rule 12 (goto -> GOTO ID .)
    NUMBER          reduce using rule 12 (goto -> GOTO ID .)
    ID              reduce using rule 12 (goto -> GOTO ID .)
    FUNCTION_DEF    reduce using rule 12 (goto -> GOTO ID .)
    CONDITION_DEF   reduce using rule 12 (goto -> GOTO ID .)
    BOOKMARK        reduce using rule 12 (goto -> GOTO ID .)
    GOTO            reduce using rule 12 (goto -> GOTO ID .)
    LPAREN          reduce using rule 12 (goto -> GOTO ID .)
    BLOCK_END       reduce using rule 12 (goto -> GOTO ID .)
    CONDITION_ELSE  reduce using rule 12 (goto -> GOTO ID .)
    $end            reduce using rule 12 (goto -> GOTO ID .)


state 35

    (4) statement -> func_def BLOCK_END .

    OLPAREN         reduce using rule 4 (statement -> func_def BLOCK_END .)
    STRING          reduce using rule 4 (statement -> func_def BLOCK_END .)
    NUMBER          reduce using rule 4 (statement -> func_def BLOCK_END .)
    ID              reduce using rule 4 (statement -> func_def BLOCK_END .)
    FUNCTION_DEF    reduce using rule 4 (statement -> func_def BLOCK_END .)
    CONDITION_DEF   reduce using rule 4 (statement -> func_def BLOCK_END .)
    BOOKMARK        reduce using rule 4 (statement -> func_def BLOCK_END .)
    GOTO            reduce using rule 4 (statement -> func_def BLOCK_END .)
    LPAREN          reduce using rule 4 (statement -> func_def BLOCK_END .)
    BLOCK_END       reduce using rule 4 (statement -> func_def BLOCK_END .)
    $end            reduce using rule 4 (statement -> func_def BLOCK_END .)
    CONDITION_ELSE  reduce using rule 4 (statement -> func_def BLOCK_END .)


state 36

    (15) func_def -> func_def statement .
    (1) statement -> statement . statement
    (1) statement -> . statement statement
    (2) statement -> . type
    (3) statement -> . assign
    (4) statement -> . func_def BLOCK_END
    (5) statement -> . condition_def BLOCK_END
    (6) statement -> . bookmark
    (7) statement -> . goto
    (25) type -> . type PLUS type
    (26) type -> . type MINUS type
    (27) type -> . type TIMES type
    (28) type -> . type DIVIDE type
    (29) type -> . type GREATERTHEN type
    (30) type -> . type GREATERTHENEQUAL type
    (31) type -> . type LESSTHEN type
    (32) type -> . type LESSTHENEQUAL type
    (33) type -> . type NEGATION type
    (34) type -> . type EQUAL type
    (35) type -> . OLPAREN type ORPAREN
    (36) type -> . function
    (37) type -> . STRING
    (38) type -> . NUMBER
    (39) type -> . ID
    (21) assign -> . ID ASSIGN type
    (22) assign -> . assign assign
    (13) func_def -> . FUNCTION_DEF ID
    (14) func_def -> . FUNCTION_DEF ID assign
    (15) func_def -> . func_def statement
    (16) condition_def -> . CONDITION_DEF type
    (17) condition_def -> . condition_def statement
    (18) condition_def -> . condition_def condition_def_else
    (11) bookmark -> . BOOKMARK ID
    (12) goto -> . GOTO ID
    (8) function -> . LPAREN ID RPAREN
    (9) function -> . LPAREN ID assign RPAREN
    (10) function -> . function targ

  ! shift/reduce conflict for OLPAREN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for FUNCTION_DEF resolved as shift
  ! shift/reduce conflict for CONDITION_DEF resolved as shift
  ! shift/reduce conflict for BOOKMARK resolved as shift
  ! shift/reduce conflict for GOTO resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    BLOCK_END       reduce using rule 15 (func_def -> func_def statement .)
    OLPAREN         shift and go to state 15
    STRING          shift and go to state 2
    NUMBER          shift and go to state 11
    ID              shift and go to state 13
    FUNCTION_DEF    shift and go to state 14
    CONDITION_DEF   shift and go to state 1
    BOOKMARK        shift and go to state 4
    GOTO            shift and go to state 8
    LPAREN          shift and go to state 12

  ! OLPAREN         [ reduce using rule 15 (func_def -> func_def statement .) ]
  ! STRING          [ reduce using rule 15 (func_def -> func_def statement .) ]
  ! NUMBER          [ reduce using rule 15 (func_def -> func_def statement .) ]
  ! ID              [ reduce using rule 15 (func_def -> func_def statement .) ]
  ! FUNCTION_DEF    [ reduce using rule 15 (func_def -> func_def statement .) ]
  ! CONDITION_DEF   [ reduce using rule 15 (func_def -> func_def statement .) ]
  ! BOOKMARK        [ reduce using rule 15 (func_def -> func_def statement .) ]
  ! GOTO            [ reduce using rule 15 (func_def -> func_def statement .) ]
  ! LPAREN          [ reduce using rule 15 (func_def -> func_def statement .) ]

    function                       shift and go to state 7
    goto                           shift and go to state 9
    func_def                       shift and go to state 10
    bookmark                       shift and go to state 3
    statement                      shift and go to state 21
    condition_def                  shift and go to state 16
    type                           shift and go to state 6
    assign                         shift and go to state 17

state 37

    (8) function -> LPAREN ID . RPAREN
    (9) function -> LPAREN ID . assign RPAREN
    (21) assign -> . ID ASSIGN type
    (22) assign -> . assign assign

    RPAREN          shift and go to state 59
    ID              shift and go to state 46

    assign                         shift and go to state 58

state 38

    (21) assign -> ID ASSIGN . type
    (25) type -> . type PLUS type
    (26) type -> . type MINUS type
    (27) type -> . type TIMES type
    (28) type -> . type DIVIDE type
    (29) type -> . type GREATERTHEN type
    (30) type -> . type GREATERTHENEQUAL type
    (31) type -> . type LESSTHEN type
    (32) type -> . type LESSTHENEQUAL type
    (33) type -> . type NEGATION type
    (34) type -> . type EQUAL type
    (35) type -> . OLPAREN type ORPAREN
    (36) type -> . function
    (37) type -> . STRING
    (38) type -> . NUMBER
    (39) type -> . ID
    (8) function -> . LPAREN ID RPAREN
    (9) function -> . LPAREN ID assign RPAREN
    (10) function -> . function targ

    OLPAREN         shift and go to state 15
    STRING          shift and go to state 2
    NUMBER          shift and go to state 11
    ID              shift and go to state 19
    LPAREN          shift and go to state 12

    function                       shift and go to state 7
    type                           shift and go to state 60

state 39

    (13) func_def -> FUNCTION_DEF ID .
    (14) func_def -> FUNCTION_DEF ID . assign
    (21) assign -> . ID ASSIGN type
    (22) assign -> . assign assign

  ! shift/reduce conflict for ID resolved as shift
    BLOCK_END       reduce using rule 13 (func_def -> FUNCTION_DEF ID .)
    OLPAREN         reduce using rule 13 (func_def -> FUNCTION_DEF ID .)
    STRING          reduce using rule 13 (func_def -> FUNCTION_DEF ID .)
    NUMBER          reduce using rule 13 (func_def -> FUNCTION_DEF ID .)
    FUNCTION_DEF    reduce using rule 13 (func_def -> FUNCTION_DEF ID .)
    CONDITION_DEF   reduce using rule 13 (func_def -> FUNCTION_DEF ID .)
    BOOKMARK        reduce using rule 13 (func_def -> FUNCTION_DEF ID .)
    GOTO            reduce using rule 13 (func_def -> FUNCTION_DEF ID .)
    LPAREN          reduce using rule 13 (func_def -> FUNCTION_DEF ID .)
    ID              shift and go to state 46

  ! ID              [ reduce using rule 13 (func_def -> FUNCTION_DEF ID .) ]

    assign                         shift and go to state 61

state 40

    (35) type -> OLPAREN type . ORPAREN
    (25) type -> type . PLUS type
    (26) type -> type . MINUS type
    (27) type -> type . TIMES type
    (28) type -> type . DIVIDE type
    (29) type -> type . GREATERTHEN type
    (30) type -> type . GREATERTHENEQUAL type
    (31) type -> type . LESSTHEN type
    (32) type -> type . LESSTHENEQUAL type
    (33) type -> type . NEGATION type
    (34) type -> type . EQUAL type

    ORPAREN         shift and go to state 62
    PLUS            shift and go to state 28
    MINUS           shift and go to state 31
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 22
    GREATERTHEN     shift and go to state 29
    GREATERTHENEQUAL shift and go to state 27
    LESSTHEN        shift and go to state 25
    LESSTHENEQUAL   shift and go to state 30
    NEGATION        shift and go to state 24
    EQUAL           shift and go to state 23


state 41

    (5) statement -> condition_def BLOCK_END .

    OLPAREN         reduce using rule 5 (statement -> condition_def BLOCK_END .)
    STRING          reduce using rule 5 (statement -> condition_def BLOCK_END .)
    NUMBER          reduce using rule 5 (statement -> condition_def BLOCK_END .)
    ID              reduce using rule 5 (statement -> condition_def BLOCK_END .)
    FUNCTION_DEF    reduce using rule 5 (statement -> condition_def BLOCK_END .)
    CONDITION_DEF   reduce using rule 5 (statement -> condition_def BLOCK_END .)
    BOOKMARK        reduce using rule 5 (statement -> condition_def BLOCK_END .)
    GOTO            reduce using rule 5 (statement -> condition_def BLOCK_END .)
    LPAREN          reduce using rule 5 (statement -> condition_def BLOCK_END .)
    BLOCK_END       reduce using rule 5 (statement -> condition_def BLOCK_END .)
    $end            reduce using rule 5 (statement -> condition_def BLOCK_END .)
    CONDITION_ELSE  reduce using rule 5 (statement -> condition_def BLOCK_END .)


state 42

    (20) condition_def_else -> CONDITION_ELSE .

    OLPAREN         reduce using rule 20 (condition_def_else -> CONDITION_ELSE .)
    STRING          reduce using rule 20 (condition_def_else -> CONDITION_ELSE .)
    NUMBER          reduce using rule 20 (condition_def_else -> CONDITION_ELSE .)
    ID              reduce using rule 20 (condition_def_else -> CONDITION_ELSE .)
    FUNCTION_DEF    reduce using rule 20 (condition_def_else -> CONDITION_ELSE .)
    CONDITION_DEF   reduce using rule 20 (condition_def_else -> CONDITION_ELSE .)
    BOOKMARK        reduce using rule 20 (condition_def_else -> CONDITION_ELSE .)
    GOTO            reduce using rule 20 (condition_def_else -> CONDITION_ELSE .)
    LPAREN          reduce using rule 20 (condition_def_else -> CONDITION_ELSE .)
    BLOCK_END       reduce using rule 20 (condition_def_else -> CONDITION_ELSE .)
    CONDITION_ELSE  reduce using rule 20 (condition_def_else -> CONDITION_ELSE .)


state 43

    (17) condition_def -> condition_def statement .
    (1) statement -> statement . statement
    (1) statement -> . statement statement
    (2) statement -> . type
    (3) statement -> . assign
    (4) statement -> . func_def BLOCK_END
    (5) statement -> . condition_def BLOCK_END
    (6) statement -> . bookmark
    (7) statement -> . goto
    (25) type -> . type PLUS type
    (26) type -> . type MINUS type
    (27) type -> . type TIMES type
    (28) type -> . type DIVIDE type
    (29) type -> . type GREATERTHEN type
    (30) type -> . type GREATERTHENEQUAL type
    (31) type -> . type LESSTHEN type
    (32) type -> . type LESSTHENEQUAL type
    (33) type -> . type NEGATION type
    (34) type -> . type EQUAL type
    (35) type -> . OLPAREN type ORPAREN
    (36) type -> . function
    (37) type -> . STRING
    (38) type -> . NUMBER
    (39) type -> . ID
    (21) assign -> . ID ASSIGN type
    (22) assign -> . assign assign
    (13) func_def -> . FUNCTION_DEF ID
    (14) func_def -> . FUNCTION_DEF ID assign
    (15) func_def -> . func_def statement
    (16) condition_def -> . CONDITION_DEF type
    (17) condition_def -> . condition_def statement
    (18) condition_def -> . condition_def condition_def_else
    (11) bookmark -> . BOOKMARK ID
    (12) goto -> . GOTO ID
    (8) function -> . LPAREN ID RPAREN
    (9) function -> . LPAREN ID assign RPAREN
    (10) function -> . function targ

  ! shift/reduce conflict for OLPAREN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for FUNCTION_DEF resolved as shift
  ! shift/reduce conflict for CONDITION_DEF resolved as shift
  ! shift/reduce conflict for BOOKMARK resolved as shift
  ! shift/reduce conflict for GOTO resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    BLOCK_END       reduce using rule 17 (condition_def -> condition_def statement .)
    CONDITION_ELSE  reduce using rule 17 (condition_def -> condition_def statement .)
    OLPAREN         shift and go to state 15
    STRING          shift and go to state 2
    NUMBER          shift and go to state 11
    ID              shift and go to state 13
    FUNCTION_DEF    shift and go to state 14
    CONDITION_DEF   shift and go to state 1
    BOOKMARK        shift and go to state 4
    GOTO            shift and go to state 8
    LPAREN          shift and go to state 12

  ! OLPAREN         [ reduce using rule 17 (condition_def -> condition_def statement .) ]
  ! STRING          [ reduce using rule 17 (condition_def -> condition_def statement .) ]
  ! NUMBER          [ reduce using rule 17 (condition_def -> condition_def statement .) ]
  ! ID              [ reduce using rule 17 (condition_def -> condition_def statement .) ]
  ! FUNCTION_DEF    [ reduce using rule 17 (condition_def -> condition_def statement .) ]
  ! CONDITION_DEF   [ reduce using rule 17 (condition_def -> condition_def statement .) ]
  ! BOOKMARK        [ reduce using rule 17 (condition_def -> condition_def statement .) ]
  ! GOTO            [ reduce using rule 17 (condition_def -> condition_def statement .) ]
  ! LPAREN          [ reduce using rule 17 (condition_def -> condition_def statement .) ]

    function                       shift and go to state 7
    goto                           shift and go to state 9
    func_def                       shift and go to state 10
    bookmark                       shift and go to state 3
    statement                      shift and go to state 21
    condition_def                  shift and go to state 16
    type                           shift and go to state 6
    assign                         shift and go to state 17

state 44

    (18) condition_def -> condition_def condition_def_else .
    (19) condition_def_else -> condition_def_else . statement
    (1) statement -> . statement statement
    (2) statement -> . type
    (3) statement -> . assign
    (4) statement -> . func_def BLOCK_END
    (5) statement -> . condition_def BLOCK_END
    (6) statement -> . bookmark
    (7) statement -> . goto
    (25) type -> . type PLUS type
    (26) type -> . type MINUS type
    (27) type -> . type TIMES type
    (28) type -> . type DIVIDE type
    (29) type -> . type GREATERTHEN type
    (30) type -> . type GREATERTHENEQUAL type
    (31) type -> . type LESSTHEN type
    (32) type -> . type LESSTHENEQUAL type
    (33) type -> . type NEGATION type
    (34) type -> . type EQUAL type
    (35) type -> . OLPAREN type ORPAREN
    (36) type -> . function
    (37) type -> . STRING
    (38) type -> . NUMBER
    (39) type -> . ID
    (21) assign -> . ID ASSIGN type
    (22) assign -> . assign assign
    (13) func_def -> . FUNCTION_DEF ID
    (14) func_def -> . FUNCTION_DEF ID assign
    (15) func_def -> . func_def statement
    (16) condition_def -> . CONDITION_DEF type
    (17) condition_def -> . condition_def statement
    (18) condition_def -> . condition_def condition_def_else
    (11) bookmark -> . BOOKMARK ID
    (12) goto -> . GOTO ID
    (8) function -> . LPAREN ID RPAREN
    (9) function -> . LPAREN ID assign RPAREN
    (10) function -> . function targ

  ! shift/reduce conflict for OLPAREN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for FUNCTION_DEF resolved as shift
  ! shift/reduce conflict for CONDITION_DEF resolved as shift
  ! shift/reduce conflict for BOOKMARK resolved as shift
  ! shift/reduce conflict for GOTO resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    BLOCK_END       reduce using rule 18 (condition_def -> condition_def condition_def_else .)
    CONDITION_ELSE  reduce using rule 18 (condition_def -> condition_def condition_def_else .)
    OLPAREN         shift and go to state 15
    STRING          shift and go to state 2
    NUMBER          shift and go to state 11
    ID              shift and go to state 13
    FUNCTION_DEF    shift and go to state 14
    CONDITION_DEF   shift and go to state 1
    BOOKMARK        shift and go to state 4
    GOTO            shift and go to state 8
    LPAREN          shift and go to state 12

  ! OLPAREN         [ reduce using rule 18 (condition_def -> condition_def condition_def_else .) ]
  ! STRING          [ reduce using rule 18 (condition_def -> condition_def condition_def_else .) ]
  ! NUMBER          [ reduce using rule 18 (condition_def -> condition_def condition_def_else .) ]
  ! ID              [ reduce using rule 18 (condition_def -> condition_def condition_def_else .) ]
  ! FUNCTION_DEF    [ reduce using rule 18 (condition_def -> condition_def condition_def_else .) ]
  ! CONDITION_DEF   [ reduce using rule 18 (condition_def -> condition_def condition_def_else .) ]
  ! BOOKMARK        [ reduce using rule 18 (condition_def -> condition_def condition_def_else .) ]
  ! GOTO            [ reduce using rule 18 (condition_def -> condition_def condition_def_else .) ]
  ! LPAREN          [ reduce using rule 18 (condition_def -> condition_def condition_def_else .) ]

    function                       shift and go to state 7
    goto                           shift and go to state 9
    func_def                       shift and go to state 10
    bookmark                       shift and go to state 3
    statement                      shift and go to state 63
    condition_def                  shift and go to state 16
    type                           shift and go to state 6
    assign                         shift and go to state 17

state 45

    (22) assign -> assign assign .
    (22) assign -> assign . assign
    (21) assign -> . ID ASSIGN type
    (22) assign -> . assign assign

  ! shift/reduce conflict for ID resolved as shift
    OLPAREN         reduce using rule 22 (assign -> assign assign .)
    STRING          reduce using rule 22 (assign -> assign assign .)
    NUMBER          reduce using rule 22 (assign -> assign assign .)
    FUNCTION_DEF    reduce using rule 22 (assign -> assign assign .)
    CONDITION_DEF   reduce using rule 22 (assign -> assign assign .)
    BOOKMARK        reduce using rule 22 (assign -> assign assign .)
    GOTO            reduce using rule 22 (assign -> assign assign .)
    LPAREN          reduce using rule 22 (assign -> assign assign .)
    $end            reduce using rule 22 (assign -> assign assign .)
    BLOCK_END       reduce using rule 22 (assign -> assign assign .)
    CONDITION_ELSE  reduce using rule 22 (assign -> assign assign .)
    RPAREN          reduce using rule 22 (assign -> assign assign .)
    ID              shift and go to state 46

  ! ID              [ reduce using rule 22 (assign -> assign assign .) ]

    assign                         shift and go to state 45

state 46

    (21) assign -> ID . ASSIGN type

    ASSIGN          shift and go to state 38


state 47

    (28) type -> type DIVIDE type .
    (25) type -> type . PLUS type
    (26) type -> type . MINUS type
    (27) type -> type . TIMES type
    (28) type -> type . DIVIDE type
    (29) type -> type . GREATERTHEN type
    (30) type -> type . GREATERTHENEQUAL type
    (31) type -> type . LESSTHEN type
    (32) type -> type . LESSTHENEQUAL type
    (33) type -> type . NEGATION type
    (34) type -> type . EQUAL type

    PLUS            reduce using rule 28 (type -> type DIVIDE type .)
    MINUS           reduce using rule 28 (type -> type DIVIDE type .)
    TIMES           reduce using rule 28 (type -> type DIVIDE type .)
    DIVIDE          reduce using rule 28 (type -> type DIVIDE type .)
    GREATERTHEN     reduce using rule 28 (type -> type DIVIDE type .)
    GREATERTHENEQUAL reduce using rule 28 (type -> type DIVIDE type .)
    LESSTHEN        reduce using rule 28 (type -> type DIVIDE type .)
    LESSTHENEQUAL   reduce using rule 28 (type -> type DIVIDE type .)
    NEGATION        reduce using rule 28 (type -> type DIVIDE type .)
    EQUAL           reduce using rule 28 (type -> type DIVIDE type .)
    OLPAREN         reduce using rule 28 (type -> type DIVIDE type .)
    STRING          reduce using rule 28 (type -> type DIVIDE type .)
    NUMBER          reduce using rule 28 (type -> type DIVIDE type .)
    ID              reduce using rule 28 (type -> type DIVIDE type .)
    FUNCTION_DEF    reduce using rule 28 (type -> type DIVIDE type .)
    CONDITION_DEF   reduce using rule 28 (type -> type DIVIDE type .)
    BOOKMARK        reduce using rule 28 (type -> type DIVIDE type .)
    GOTO            reduce using rule 28 (type -> type DIVIDE type .)
    LPAREN          reduce using rule 28 (type -> type DIVIDE type .)
    $end            reduce using rule 28 (type -> type DIVIDE type .)
    BLOCK_END       reduce using rule 28 (type -> type DIVIDE type .)
    CONDITION_ELSE  reduce using rule 28 (type -> type DIVIDE type .)
    ORPAREN         reduce using rule 28 (type -> type DIVIDE type .)
    RPAREN          reduce using rule 28 (type -> type DIVIDE type .)

  ! PLUS            [ shift and go to state 28 ]
  ! MINUS           [ shift and go to state 31 ]
  ! TIMES           [ shift and go to state 26 ]
  ! DIVIDE          [ shift and go to state 22 ]
  ! GREATERTHEN     [ shift and go to state 29 ]
  ! GREATERTHENEQUAL [ shift and go to state 27 ]
  ! LESSTHEN        [ shift and go to state 25 ]
  ! LESSTHENEQUAL   [ shift and go to state 30 ]
  ! NEGATION        [ shift and go to state 24 ]
  ! EQUAL           [ shift and go to state 23 ]


state 48

    (34) type -> type EQUAL type .
    (25) type -> type . PLUS type
    (26) type -> type . MINUS type
    (27) type -> type . TIMES type
    (28) type -> type . DIVIDE type
    (29) type -> type . GREATERTHEN type
    (30) type -> type . GREATERTHENEQUAL type
    (31) type -> type . LESSTHEN type
    (32) type -> type . LESSTHENEQUAL type
    (33) type -> type . NEGATION type
    (34) type -> type . EQUAL type

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHEN resolved as shift
  ! shift/reduce conflict for GREATERTHENEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHEN resolved as shift
  ! shift/reduce conflict for LESSTHENEQUAL resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    OLPAREN         reduce using rule 34 (type -> type EQUAL type .)
    STRING          reduce using rule 34 (type -> type EQUAL type .)
    NUMBER          reduce using rule 34 (type -> type EQUAL type .)
    ID              reduce using rule 34 (type -> type EQUAL type .)
    FUNCTION_DEF    reduce using rule 34 (type -> type EQUAL type .)
    CONDITION_DEF   reduce using rule 34 (type -> type EQUAL type .)
    BOOKMARK        reduce using rule 34 (type -> type EQUAL type .)
    GOTO            reduce using rule 34 (type -> type EQUAL type .)
    LPAREN          reduce using rule 34 (type -> type EQUAL type .)
    $end            reduce using rule 34 (type -> type EQUAL type .)
    BLOCK_END       reduce using rule 34 (type -> type EQUAL type .)
    CONDITION_ELSE  reduce using rule 34 (type -> type EQUAL type .)
    ORPAREN         reduce using rule 34 (type -> type EQUAL type .)
    RPAREN          reduce using rule 34 (type -> type EQUAL type .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 31
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 22
    GREATERTHEN     shift and go to state 29
    GREATERTHENEQUAL shift and go to state 27
    LESSTHEN        shift and go to state 25
    LESSTHENEQUAL   shift and go to state 30
    NEGATION        shift and go to state 24
    EQUAL           shift and go to state 23

  ! PLUS            [ reduce using rule 34 (type -> type EQUAL type .) ]
  ! MINUS           [ reduce using rule 34 (type -> type EQUAL type .) ]
  ! TIMES           [ reduce using rule 34 (type -> type EQUAL type .) ]
  ! DIVIDE          [ reduce using rule 34 (type -> type EQUAL type .) ]
  ! GREATERTHEN     [ reduce using rule 34 (type -> type EQUAL type .) ]
  ! GREATERTHENEQUAL [ reduce using rule 34 (type -> type EQUAL type .) ]
  ! LESSTHEN        [ reduce using rule 34 (type -> type EQUAL type .) ]
  ! LESSTHENEQUAL   [ reduce using rule 34 (type -> type EQUAL type .) ]
  ! NEGATION        [ reduce using rule 34 (type -> type EQUAL type .) ]
  ! EQUAL           [ reduce using rule 34 (type -> type EQUAL type .) ]


state 49

    (33) type -> type NEGATION type .
    (25) type -> type . PLUS type
    (26) type -> type . MINUS type
    (27) type -> type . TIMES type
    (28) type -> type . DIVIDE type
    (29) type -> type . GREATERTHEN type
    (30) type -> type . GREATERTHENEQUAL type
    (31) type -> type . LESSTHEN type
    (32) type -> type . LESSTHENEQUAL type
    (33) type -> type . NEGATION type
    (34) type -> type . EQUAL type

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHEN resolved as shift
  ! shift/reduce conflict for GREATERTHENEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHEN resolved as shift
  ! shift/reduce conflict for LESSTHENEQUAL resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    OLPAREN         reduce using rule 33 (type -> type NEGATION type .)
    STRING          reduce using rule 33 (type -> type NEGATION type .)
    NUMBER          reduce using rule 33 (type -> type NEGATION type .)
    ID              reduce using rule 33 (type -> type NEGATION type .)
    FUNCTION_DEF    reduce using rule 33 (type -> type NEGATION type .)
    CONDITION_DEF   reduce using rule 33 (type -> type NEGATION type .)
    BOOKMARK        reduce using rule 33 (type -> type NEGATION type .)
    GOTO            reduce using rule 33 (type -> type NEGATION type .)
    LPAREN          reduce using rule 33 (type -> type NEGATION type .)
    $end            reduce using rule 33 (type -> type NEGATION type .)
    BLOCK_END       reduce using rule 33 (type -> type NEGATION type .)
    CONDITION_ELSE  reduce using rule 33 (type -> type NEGATION type .)
    ORPAREN         reduce using rule 33 (type -> type NEGATION type .)
    RPAREN          reduce using rule 33 (type -> type NEGATION type .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 31
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 22
    GREATERTHEN     shift and go to state 29
    GREATERTHENEQUAL shift and go to state 27
    LESSTHEN        shift and go to state 25
    LESSTHENEQUAL   shift and go to state 30
    NEGATION        shift and go to state 24
    EQUAL           shift and go to state 23

  ! PLUS            [ reduce using rule 33 (type -> type NEGATION type .) ]
  ! MINUS           [ reduce using rule 33 (type -> type NEGATION type .) ]
  ! TIMES           [ reduce using rule 33 (type -> type NEGATION type .) ]
  ! DIVIDE          [ reduce using rule 33 (type -> type NEGATION type .) ]
  ! GREATERTHEN     [ reduce using rule 33 (type -> type NEGATION type .) ]
  ! GREATERTHENEQUAL [ reduce using rule 33 (type -> type NEGATION type .) ]
  ! LESSTHEN        [ reduce using rule 33 (type -> type NEGATION type .) ]
  ! LESSTHENEQUAL   [ reduce using rule 33 (type -> type NEGATION type .) ]
  ! NEGATION        [ reduce using rule 33 (type -> type NEGATION type .) ]
  ! EQUAL           [ reduce using rule 33 (type -> type NEGATION type .) ]


state 50

    (31) type -> type LESSTHEN type .
    (25) type -> type . PLUS type
    (26) type -> type . MINUS type
    (27) type -> type . TIMES type
    (28) type -> type . DIVIDE type
    (29) type -> type . GREATERTHEN type
    (30) type -> type . GREATERTHENEQUAL type
    (31) type -> type . LESSTHEN type
    (32) type -> type . LESSTHENEQUAL type
    (33) type -> type . NEGATION type
    (34) type -> type . EQUAL type

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHEN resolved as shift
  ! shift/reduce conflict for GREATERTHENEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHEN resolved as shift
  ! shift/reduce conflict for LESSTHENEQUAL resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    OLPAREN         reduce using rule 31 (type -> type LESSTHEN type .)
    STRING          reduce using rule 31 (type -> type LESSTHEN type .)
    NUMBER          reduce using rule 31 (type -> type LESSTHEN type .)
    ID              reduce using rule 31 (type -> type LESSTHEN type .)
    FUNCTION_DEF    reduce using rule 31 (type -> type LESSTHEN type .)
    CONDITION_DEF   reduce using rule 31 (type -> type LESSTHEN type .)
    BOOKMARK        reduce using rule 31 (type -> type LESSTHEN type .)
    GOTO            reduce using rule 31 (type -> type LESSTHEN type .)
    LPAREN          reduce using rule 31 (type -> type LESSTHEN type .)
    $end            reduce using rule 31 (type -> type LESSTHEN type .)
    BLOCK_END       reduce using rule 31 (type -> type LESSTHEN type .)
    CONDITION_ELSE  reduce using rule 31 (type -> type LESSTHEN type .)
    ORPAREN         reduce using rule 31 (type -> type LESSTHEN type .)
    RPAREN          reduce using rule 31 (type -> type LESSTHEN type .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 31
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 22
    GREATERTHEN     shift and go to state 29
    GREATERTHENEQUAL shift and go to state 27
    LESSTHEN        shift and go to state 25
    LESSTHENEQUAL   shift and go to state 30
    NEGATION        shift and go to state 24
    EQUAL           shift and go to state 23

  ! PLUS            [ reduce using rule 31 (type -> type LESSTHEN type .) ]
  ! MINUS           [ reduce using rule 31 (type -> type LESSTHEN type .) ]
  ! TIMES           [ reduce using rule 31 (type -> type LESSTHEN type .) ]
  ! DIVIDE          [ reduce using rule 31 (type -> type LESSTHEN type .) ]
  ! GREATERTHEN     [ reduce using rule 31 (type -> type LESSTHEN type .) ]
  ! GREATERTHENEQUAL [ reduce using rule 31 (type -> type LESSTHEN type .) ]
  ! LESSTHEN        [ reduce using rule 31 (type -> type LESSTHEN type .) ]
  ! LESSTHENEQUAL   [ reduce using rule 31 (type -> type LESSTHEN type .) ]
  ! NEGATION        [ reduce using rule 31 (type -> type LESSTHEN type .) ]
  ! EQUAL           [ reduce using rule 31 (type -> type LESSTHEN type .) ]


state 51

    (27) type -> type TIMES type .
    (25) type -> type . PLUS type
    (26) type -> type . MINUS type
    (27) type -> type . TIMES type
    (28) type -> type . DIVIDE type
    (29) type -> type . GREATERTHEN type
    (30) type -> type . GREATERTHENEQUAL type
    (31) type -> type . LESSTHEN type
    (32) type -> type . LESSTHENEQUAL type
    (33) type -> type . NEGATION type
    (34) type -> type . EQUAL type

    PLUS            reduce using rule 27 (type -> type TIMES type .)
    MINUS           reduce using rule 27 (type -> type TIMES type .)
    TIMES           reduce using rule 27 (type -> type TIMES type .)
    DIVIDE          reduce using rule 27 (type -> type TIMES type .)
    GREATERTHEN     reduce using rule 27 (type -> type TIMES type .)
    GREATERTHENEQUAL reduce using rule 27 (type -> type TIMES type .)
    LESSTHEN        reduce using rule 27 (type -> type TIMES type .)
    LESSTHENEQUAL   reduce using rule 27 (type -> type TIMES type .)
    NEGATION        reduce using rule 27 (type -> type TIMES type .)
    EQUAL           reduce using rule 27 (type -> type TIMES type .)
    OLPAREN         reduce using rule 27 (type -> type TIMES type .)
    STRING          reduce using rule 27 (type -> type TIMES type .)
    NUMBER          reduce using rule 27 (type -> type TIMES type .)
    ID              reduce using rule 27 (type -> type TIMES type .)
    FUNCTION_DEF    reduce using rule 27 (type -> type TIMES type .)
    CONDITION_DEF   reduce using rule 27 (type -> type TIMES type .)
    BOOKMARK        reduce using rule 27 (type -> type TIMES type .)
    GOTO            reduce using rule 27 (type -> type TIMES type .)
    LPAREN          reduce using rule 27 (type -> type TIMES type .)
    $end            reduce using rule 27 (type -> type TIMES type .)
    BLOCK_END       reduce using rule 27 (type -> type TIMES type .)
    CONDITION_ELSE  reduce using rule 27 (type -> type TIMES type .)
    ORPAREN         reduce using rule 27 (type -> type TIMES type .)
    RPAREN          reduce using rule 27 (type -> type TIMES type .)

  ! PLUS            [ shift and go to state 28 ]
  ! MINUS           [ shift and go to state 31 ]
  ! TIMES           [ shift and go to state 26 ]
  ! DIVIDE          [ shift and go to state 22 ]
  ! GREATERTHEN     [ shift and go to state 29 ]
  ! GREATERTHENEQUAL [ shift and go to state 27 ]
  ! LESSTHEN        [ shift and go to state 25 ]
  ! LESSTHENEQUAL   [ shift and go to state 30 ]
  ! NEGATION        [ shift and go to state 24 ]
  ! EQUAL           [ shift and go to state 23 ]


state 52

    (30) type -> type GREATERTHENEQUAL type .
    (25) type -> type . PLUS type
    (26) type -> type . MINUS type
    (27) type -> type . TIMES type
    (28) type -> type . DIVIDE type
    (29) type -> type . GREATERTHEN type
    (30) type -> type . GREATERTHENEQUAL type
    (31) type -> type . LESSTHEN type
    (32) type -> type . LESSTHENEQUAL type
    (33) type -> type . NEGATION type
    (34) type -> type . EQUAL type

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHEN resolved as shift
  ! shift/reduce conflict for GREATERTHENEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHEN resolved as shift
  ! shift/reduce conflict for LESSTHENEQUAL resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    OLPAREN         reduce using rule 30 (type -> type GREATERTHENEQUAL type .)
    STRING          reduce using rule 30 (type -> type GREATERTHENEQUAL type .)
    NUMBER          reduce using rule 30 (type -> type GREATERTHENEQUAL type .)
    ID              reduce using rule 30 (type -> type GREATERTHENEQUAL type .)
    FUNCTION_DEF    reduce using rule 30 (type -> type GREATERTHENEQUAL type .)
    CONDITION_DEF   reduce using rule 30 (type -> type GREATERTHENEQUAL type .)
    BOOKMARK        reduce using rule 30 (type -> type GREATERTHENEQUAL type .)
    GOTO            reduce using rule 30 (type -> type GREATERTHENEQUAL type .)
    LPAREN          reduce using rule 30 (type -> type GREATERTHENEQUAL type .)
    $end            reduce using rule 30 (type -> type GREATERTHENEQUAL type .)
    BLOCK_END       reduce using rule 30 (type -> type GREATERTHENEQUAL type .)
    CONDITION_ELSE  reduce using rule 30 (type -> type GREATERTHENEQUAL type .)
    ORPAREN         reduce using rule 30 (type -> type GREATERTHENEQUAL type .)
    RPAREN          reduce using rule 30 (type -> type GREATERTHENEQUAL type .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 31
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 22
    GREATERTHEN     shift and go to state 29
    GREATERTHENEQUAL shift and go to state 27
    LESSTHEN        shift and go to state 25
    LESSTHENEQUAL   shift and go to state 30
    NEGATION        shift and go to state 24
    EQUAL           shift and go to state 23

  ! PLUS            [ reduce using rule 30 (type -> type GREATERTHENEQUAL type .) ]
  ! MINUS           [ reduce using rule 30 (type -> type GREATERTHENEQUAL type .) ]
  ! TIMES           [ reduce using rule 30 (type -> type GREATERTHENEQUAL type .) ]
  ! DIVIDE          [ reduce using rule 30 (type -> type GREATERTHENEQUAL type .) ]
  ! GREATERTHEN     [ reduce using rule 30 (type -> type GREATERTHENEQUAL type .) ]
  ! GREATERTHENEQUAL [ reduce using rule 30 (type -> type GREATERTHENEQUAL type .) ]
  ! LESSTHEN        [ reduce using rule 30 (type -> type GREATERTHENEQUAL type .) ]
  ! LESSTHENEQUAL   [ reduce using rule 30 (type -> type GREATERTHENEQUAL type .) ]
  ! NEGATION        [ reduce using rule 30 (type -> type GREATERTHENEQUAL type .) ]
  ! EQUAL           [ reduce using rule 30 (type -> type GREATERTHENEQUAL type .) ]


state 53

    (25) type -> type PLUS type .
    (25) type -> type . PLUS type
    (26) type -> type . MINUS type
    (27) type -> type . TIMES type
    (28) type -> type . DIVIDE type
    (29) type -> type . GREATERTHEN type
    (30) type -> type . GREATERTHENEQUAL type
    (31) type -> type . LESSTHEN type
    (32) type -> type . LESSTHENEQUAL type
    (33) type -> type . NEGATION type
    (34) type -> type . EQUAL type

    PLUS            reduce using rule 25 (type -> type PLUS type .)
    MINUS           reduce using rule 25 (type -> type PLUS type .)
    GREATERTHEN     reduce using rule 25 (type -> type PLUS type .)
    GREATERTHENEQUAL reduce using rule 25 (type -> type PLUS type .)
    LESSTHEN        reduce using rule 25 (type -> type PLUS type .)
    LESSTHENEQUAL   reduce using rule 25 (type -> type PLUS type .)
    NEGATION        reduce using rule 25 (type -> type PLUS type .)
    EQUAL           reduce using rule 25 (type -> type PLUS type .)
    OLPAREN         reduce using rule 25 (type -> type PLUS type .)
    STRING          reduce using rule 25 (type -> type PLUS type .)
    NUMBER          reduce using rule 25 (type -> type PLUS type .)
    ID              reduce using rule 25 (type -> type PLUS type .)
    FUNCTION_DEF    reduce using rule 25 (type -> type PLUS type .)
    CONDITION_DEF   reduce using rule 25 (type -> type PLUS type .)
    BOOKMARK        reduce using rule 25 (type -> type PLUS type .)
    GOTO            reduce using rule 25 (type -> type PLUS type .)
    LPAREN          reduce using rule 25 (type -> type PLUS type .)
    $end            reduce using rule 25 (type -> type PLUS type .)
    BLOCK_END       reduce using rule 25 (type -> type PLUS type .)
    CONDITION_ELSE  reduce using rule 25 (type -> type PLUS type .)
    ORPAREN         reduce using rule 25 (type -> type PLUS type .)
    RPAREN          reduce using rule 25 (type -> type PLUS type .)
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 22

  ! TIMES           [ reduce using rule 25 (type -> type PLUS type .) ]
  ! DIVIDE          [ reduce using rule 25 (type -> type PLUS type .) ]
  ! PLUS            [ shift and go to state 28 ]
  ! MINUS           [ shift and go to state 31 ]
  ! GREATERTHEN     [ shift and go to state 29 ]
  ! GREATERTHENEQUAL [ shift and go to state 27 ]
  ! LESSTHEN        [ shift and go to state 25 ]
  ! LESSTHENEQUAL   [ shift and go to state 30 ]
  ! NEGATION        [ shift and go to state 24 ]
  ! EQUAL           [ shift and go to state 23 ]


state 54

    (29) type -> type GREATERTHEN type .
    (25) type -> type . PLUS type
    (26) type -> type . MINUS type
    (27) type -> type . TIMES type
    (28) type -> type . DIVIDE type
    (29) type -> type . GREATERTHEN type
    (30) type -> type . GREATERTHENEQUAL type
    (31) type -> type . LESSTHEN type
    (32) type -> type . LESSTHENEQUAL type
    (33) type -> type . NEGATION type
    (34) type -> type . EQUAL type

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHEN resolved as shift
  ! shift/reduce conflict for GREATERTHENEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHEN resolved as shift
  ! shift/reduce conflict for LESSTHENEQUAL resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    OLPAREN         reduce using rule 29 (type -> type GREATERTHEN type .)
    STRING          reduce using rule 29 (type -> type GREATERTHEN type .)
    NUMBER          reduce using rule 29 (type -> type GREATERTHEN type .)
    ID              reduce using rule 29 (type -> type GREATERTHEN type .)
    FUNCTION_DEF    reduce using rule 29 (type -> type GREATERTHEN type .)
    CONDITION_DEF   reduce using rule 29 (type -> type GREATERTHEN type .)
    BOOKMARK        reduce using rule 29 (type -> type GREATERTHEN type .)
    GOTO            reduce using rule 29 (type -> type GREATERTHEN type .)
    LPAREN          reduce using rule 29 (type -> type GREATERTHEN type .)
    $end            reduce using rule 29 (type -> type GREATERTHEN type .)
    BLOCK_END       reduce using rule 29 (type -> type GREATERTHEN type .)
    CONDITION_ELSE  reduce using rule 29 (type -> type GREATERTHEN type .)
    ORPAREN         reduce using rule 29 (type -> type GREATERTHEN type .)
    RPAREN          reduce using rule 29 (type -> type GREATERTHEN type .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 31
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 22
    GREATERTHEN     shift and go to state 29
    GREATERTHENEQUAL shift and go to state 27
    LESSTHEN        shift and go to state 25
    LESSTHENEQUAL   shift and go to state 30
    NEGATION        shift and go to state 24
    EQUAL           shift and go to state 23

  ! PLUS            [ reduce using rule 29 (type -> type GREATERTHEN type .) ]
  ! MINUS           [ reduce using rule 29 (type -> type GREATERTHEN type .) ]
  ! TIMES           [ reduce using rule 29 (type -> type GREATERTHEN type .) ]
  ! DIVIDE          [ reduce using rule 29 (type -> type GREATERTHEN type .) ]
  ! GREATERTHEN     [ reduce using rule 29 (type -> type GREATERTHEN type .) ]
  ! GREATERTHENEQUAL [ reduce using rule 29 (type -> type GREATERTHEN type .) ]
  ! LESSTHEN        [ reduce using rule 29 (type -> type GREATERTHEN type .) ]
  ! LESSTHENEQUAL   [ reduce using rule 29 (type -> type GREATERTHEN type .) ]
  ! NEGATION        [ reduce using rule 29 (type -> type GREATERTHEN type .) ]
  ! EQUAL           [ reduce using rule 29 (type -> type GREATERTHEN type .) ]


state 55

    (32) type -> type LESSTHENEQUAL type .
    (25) type -> type . PLUS type
    (26) type -> type . MINUS type
    (27) type -> type . TIMES type
    (28) type -> type . DIVIDE type
    (29) type -> type . GREATERTHEN type
    (30) type -> type . GREATERTHENEQUAL type
    (31) type -> type . LESSTHEN type
    (32) type -> type . LESSTHENEQUAL type
    (33) type -> type . NEGATION type
    (34) type -> type . EQUAL type

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GREATERTHEN resolved as shift
  ! shift/reduce conflict for GREATERTHENEQUAL resolved as shift
  ! shift/reduce conflict for LESSTHEN resolved as shift
  ! shift/reduce conflict for LESSTHENEQUAL resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    OLPAREN         reduce using rule 32 (type -> type LESSTHENEQUAL type .)
    STRING          reduce using rule 32 (type -> type LESSTHENEQUAL type .)
    NUMBER          reduce using rule 32 (type -> type LESSTHENEQUAL type .)
    ID              reduce using rule 32 (type -> type LESSTHENEQUAL type .)
    FUNCTION_DEF    reduce using rule 32 (type -> type LESSTHENEQUAL type .)
    CONDITION_DEF   reduce using rule 32 (type -> type LESSTHENEQUAL type .)
    BOOKMARK        reduce using rule 32 (type -> type LESSTHENEQUAL type .)
    GOTO            reduce using rule 32 (type -> type LESSTHENEQUAL type .)
    LPAREN          reduce using rule 32 (type -> type LESSTHENEQUAL type .)
    $end            reduce using rule 32 (type -> type LESSTHENEQUAL type .)
    BLOCK_END       reduce using rule 32 (type -> type LESSTHENEQUAL type .)
    CONDITION_ELSE  reduce using rule 32 (type -> type LESSTHENEQUAL type .)
    ORPAREN         reduce using rule 32 (type -> type LESSTHENEQUAL type .)
    RPAREN          reduce using rule 32 (type -> type LESSTHENEQUAL type .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 31
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 22
    GREATERTHEN     shift and go to state 29
    GREATERTHENEQUAL shift and go to state 27
    LESSTHEN        shift and go to state 25
    LESSTHENEQUAL   shift and go to state 30
    NEGATION        shift and go to state 24
    EQUAL           shift and go to state 23

  ! PLUS            [ reduce using rule 32 (type -> type LESSTHENEQUAL type .) ]
  ! MINUS           [ reduce using rule 32 (type -> type LESSTHENEQUAL type .) ]
  ! TIMES           [ reduce using rule 32 (type -> type LESSTHENEQUAL type .) ]
  ! DIVIDE          [ reduce using rule 32 (type -> type LESSTHENEQUAL type .) ]
  ! GREATERTHEN     [ reduce using rule 32 (type -> type LESSTHENEQUAL type .) ]
  ! GREATERTHENEQUAL [ reduce using rule 32 (type -> type LESSTHENEQUAL type .) ]
  ! LESSTHEN        [ reduce using rule 32 (type -> type LESSTHENEQUAL type .) ]
  ! LESSTHENEQUAL   [ reduce using rule 32 (type -> type LESSTHENEQUAL type .) ]
  ! NEGATION        [ reduce using rule 32 (type -> type LESSTHENEQUAL type .) ]
  ! EQUAL           [ reduce using rule 32 (type -> type LESSTHENEQUAL type .) ]


state 56

    (26) type -> type MINUS type .
    (25) type -> type . PLUS type
    (26) type -> type . MINUS type
    (27) type -> type . TIMES type
    (28) type -> type . DIVIDE type
    (29) type -> type . GREATERTHEN type
    (30) type -> type . GREATERTHENEQUAL type
    (31) type -> type . LESSTHEN type
    (32) type -> type . LESSTHENEQUAL type
    (33) type -> type . NEGATION type
    (34) type -> type . EQUAL type

    PLUS            reduce using rule 26 (type -> type MINUS type .)
    MINUS           reduce using rule 26 (type -> type MINUS type .)
    GREATERTHEN     reduce using rule 26 (type -> type MINUS type .)
    GREATERTHENEQUAL reduce using rule 26 (type -> type MINUS type .)
    LESSTHEN        reduce using rule 26 (type -> type MINUS type .)
    LESSTHENEQUAL   reduce using rule 26 (type -> type MINUS type .)
    NEGATION        reduce using rule 26 (type -> type MINUS type .)
    EQUAL           reduce using rule 26 (type -> type MINUS type .)
    OLPAREN         reduce using rule 26 (type -> type MINUS type .)
    STRING          reduce using rule 26 (type -> type MINUS type .)
    NUMBER          reduce using rule 26 (type -> type MINUS type .)
    ID              reduce using rule 26 (type -> type MINUS type .)
    FUNCTION_DEF    reduce using rule 26 (type -> type MINUS type .)
    CONDITION_DEF   reduce using rule 26 (type -> type MINUS type .)
    BOOKMARK        reduce using rule 26 (type -> type MINUS type .)
    GOTO            reduce using rule 26 (type -> type MINUS type .)
    LPAREN          reduce using rule 26 (type -> type MINUS type .)
    $end            reduce using rule 26 (type -> type MINUS type .)
    BLOCK_END       reduce using rule 26 (type -> type MINUS type .)
    CONDITION_ELSE  reduce using rule 26 (type -> type MINUS type .)
    ORPAREN         reduce using rule 26 (type -> type MINUS type .)
    RPAREN          reduce using rule 26 (type -> type MINUS type .)
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 22

  ! TIMES           [ reduce using rule 26 (type -> type MINUS type .) ]
  ! DIVIDE          [ reduce using rule 26 (type -> type MINUS type .) ]
  ! PLUS            [ shift and go to state 28 ]
  ! MINUS           [ shift and go to state 31 ]
  ! GREATERTHEN     [ shift and go to state 29 ]
  ! GREATERTHENEQUAL [ shift and go to state 27 ]
  ! LESSTHEN        [ shift and go to state 25 ]
  ! LESSTHENEQUAL   [ shift and go to state 30 ]
  ! NEGATION        [ shift and go to state 24 ]
  ! EQUAL           [ shift and go to state 23 ]


state 57

    (23) targ -> targ targ .
    (23) targ -> targ . targ
    (23) targ -> . targ targ
    (24) targ -> . TABARGU

  ! shift/reduce conflict for TABARGU resolved as shift
    PLUS            reduce using rule 23 (targ -> targ targ .)
    MINUS           reduce using rule 23 (targ -> targ targ .)
    TIMES           reduce using rule 23 (targ -> targ targ .)
    DIVIDE          reduce using rule 23 (targ -> targ targ .)
    GREATERTHEN     reduce using rule 23 (targ -> targ targ .)
    GREATERTHENEQUAL reduce using rule 23 (targ -> targ targ .)
    LESSTHEN        reduce using rule 23 (targ -> targ targ .)
    LESSTHENEQUAL   reduce using rule 23 (targ -> targ targ .)
    NEGATION        reduce using rule 23 (targ -> targ targ .)
    EQUAL           reduce using rule 23 (targ -> targ targ .)
    OLPAREN         reduce using rule 23 (targ -> targ targ .)
    STRING          reduce using rule 23 (targ -> targ targ .)
    NUMBER          reduce using rule 23 (targ -> targ targ .)
    ID              reduce using rule 23 (targ -> targ targ .)
    FUNCTION_DEF    reduce using rule 23 (targ -> targ targ .)
    CONDITION_DEF   reduce using rule 23 (targ -> targ targ .)
    BOOKMARK        reduce using rule 23 (targ -> targ targ .)
    GOTO            reduce using rule 23 (targ -> targ targ .)
    LPAREN          reduce using rule 23 (targ -> targ targ .)
    $end            reduce using rule 23 (targ -> targ targ .)
    BLOCK_END       reduce using rule 23 (targ -> targ targ .)
    CONDITION_ELSE  reduce using rule 23 (targ -> targ targ .)
    ORPAREN         reduce using rule 23 (targ -> targ targ .)
    RPAREN          reduce using rule 23 (targ -> targ targ .)
    TABARGU         shift and go to state 33

  ! TABARGU         [ reduce using rule 23 (targ -> targ targ .) ]

    targ                           shift and go to state 57

state 58

    (9) function -> LPAREN ID assign . RPAREN
    (22) assign -> assign . assign
    (21) assign -> . ID ASSIGN type
    (22) assign -> . assign assign

    RPAREN          shift and go to state 64
    ID              shift and go to state 46

    assign                         shift and go to state 45

state 59

    (8) function -> LPAREN ID RPAREN .

    TABARGU         reduce using rule 8 (function -> LPAREN ID RPAREN .)
    PLUS            reduce using rule 8 (function -> LPAREN ID RPAREN .)
    MINUS           reduce using rule 8 (function -> LPAREN ID RPAREN .)
    TIMES           reduce using rule 8 (function -> LPAREN ID RPAREN .)
    DIVIDE          reduce using rule 8 (function -> LPAREN ID RPAREN .)
    GREATERTHEN     reduce using rule 8 (function -> LPAREN ID RPAREN .)
    GREATERTHENEQUAL reduce using rule 8 (function -> LPAREN ID RPAREN .)
    LESSTHEN        reduce using rule 8 (function -> LPAREN ID RPAREN .)
    LESSTHENEQUAL   reduce using rule 8 (function -> LPAREN ID RPAREN .)
    NEGATION        reduce using rule 8 (function -> LPAREN ID RPAREN .)
    EQUAL           reduce using rule 8 (function -> LPAREN ID RPAREN .)
    OLPAREN         reduce using rule 8 (function -> LPAREN ID RPAREN .)
    STRING          reduce using rule 8 (function -> LPAREN ID RPAREN .)
    NUMBER          reduce using rule 8 (function -> LPAREN ID RPAREN .)
    ID              reduce using rule 8 (function -> LPAREN ID RPAREN .)
    FUNCTION_DEF    reduce using rule 8 (function -> LPAREN ID RPAREN .)
    CONDITION_DEF   reduce using rule 8 (function -> LPAREN ID RPAREN .)
    BOOKMARK        reduce using rule 8 (function -> LPAREN ID RPAREN .)
    GOTO            reduce using rule 8 (function -> LPAREN ID RPAREN .)
    LPAREN          reduce using rule 8 (function -> LPAREN ID RPAREN .)
    $end            reduce using rule 8 (function -> LPAREN ID RPAREN .)
    BLOCK_END       reduce using rule 8 (function -> LPAREN ID RPAREN .)
    CONDITION_ELSE  reduce using rule 8 (function -> LPAREN ID RPAREN .)
    ORPAREN         reduce using rule 8 (function -> LPAREN ID RPAREN .)
    RPAREN          reduce using rule 8 (function -> LPAREN ID RPAREN .)


state 60

    (21) assign -> ID ASSIGN type .
    (25) type -> type . PLUS type
    (26) type -> type . MINUS type
    (27) type -> type . TIMES type
    (28) type -> type . DIVIDE type
    (29) type -> type . GREATERTHEN type
    (30) type -> type . GREATERTHENEQUAL type
    (31) type -> type . LESSTHEN type
    (32) type -> type . LESSTHENEQUAL type
    (33) type -> type . NEGATION type
    (34) type -> type . EQUAL type

    ID              reduce using rule 21 (assign -> ID ASSIGN type .)
    OLPAREN         reduce using rule 21 (assign -> ID ASSIGN type .)
    STRING          reduce using rule 21 (assign -> ID ASSIGN type .)
    NUMBER          reduce using rule 21 (assign -> ID ASSIGN type .)
    FUNCTION_DEF    reduce using rule 21 (assign -> ID ASSIGN type .)
    CONDITION_DEF   reduce using rule 21 (assign -> ID ASSIGN type .)
    BOOKMARK        reduce using rule 21 (assign -> ID ASSIGN type .)
    GOTO            reduce using rule 21 (assign -> ID ASSIGN type .)
    LPAREN          reduce using rule 21 (assign -> ID ASSIGN type .)
    $end            reduce using rule 21 (assign -> ID ASSIGN type .)
    BLOCK_END       reduce using rule 21 (assign -> ID ASSIGN type .)
    CONDITION_ELSE  reduce using rule 21 (assign -> ID ASSIGN type .)
    RPAREN          reduce using rule 21 (assign -> ID ASSIGN type .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 31
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 22
    GREATERTHEN     shift and go to state 29
    GREATERTHENEQUAL shift and go to state 27
    LESSTHEN        shift and go to state 25
    LESSTHENEQUAL   shift and go to state 30
    NEGATION        shift and go to state 24
    EQUAL           shift and go to state 23


state 61

    (14) func_def -> FUNCTION_DEF ID assign .
    (22) assign -> assign . assign
    (21) assign -> . ID ASSIGN type
    (22) assign -> . assign assign

  ! shift/reduce conflict for ID resolved as shift
    BLOCK_END       reduce using rule 14 (func_def -> FUNCTION_DEF ID assign .)
    OLPAREN         reduce using rule 14 (func_def -> FUNCTION_DEF ID assign .)
    STRING          reduce using rule 14 (func_def -> FUNCTION_DEF ID assign .)
    NUMBER          reduce using rule 14 (func_def -> FUNCTION_DEF ID assign .)
    FUNCTION_DEF    reduce using rule 14 (func_def -> FUNCTION_DEF ID assign .)
    CONDITION_DEF   reduce using rule 14 (func_def -> FUNCTION_DEF ID assign .)
    BOOKMARK        reduce using rule 14 (func_def -> FUNCTION_DEF ID assign .)
    GOTO            reduce using rule 14 (func_def -> FUNCTION_DEF ID assign .)
    LPAREN          reduce using rule 14 (func_def -> FUNCTION_DEF ID assign .)
    ID              shift and go to state 46

  ! ID              [ reduce using rule 14 (func_def -> FUNCTION_DEF ID assign .) ]

    assign                         shift and go to state 45

state 62

    (35) type -> OLPAREN type ORPAREN .

    PLUS            reduce using rule 35 (type -> OLPAREN type ORPAREN .)
    MINUS           reduce using rule 35 (type -> OLPAREN type ORPAREN .)
    TIMES           reduce using rule 35 (type -> OLPAREN type ORPAREN .)
    DIVIDE          reduce using rule 35 (type -> OLPAREN type ORPAREN .)
    GREATERTHEN     reduce using rule 35 (type -> OLPAREN type ORPAREN .)
    GREATERTHENEQUAL reduce using rule 35 (type -> OLPAREN type ORPAREN .)
    LESSTHEN        reduce using rule 35 (type -> OLPAREN type ORPAREN .)
    LESSTHENEQUAL   reduce using rule 35 (type -> OLPAREN type ORPAREN .)
    NEGATION        reduce using rule 35 (type -> OLPAREN type ORPAREN .)
    EQUAL           reduce using rule 35 (type -> OLPAREN type ORPAREN .)
    OLPAREN         reduce using rule 35 (type -> OLPAREN type ORPAREN .)
    STRING          reduce using rule 35 (type -> OLPAREN type ORPAREN .)
    NUMBER          reduce using rule 35 (type -> OLPAREN type ORPAREN .)
    ID              reduce using rule 35 (type -> OLPAREN type ORPAREN .)
    FUNCTION_DEF    reduce using rule 35 (type -> OLPAREN type ORPAREN .)
    CONDITION_DEF   reduce using rule 35 (type -> OLPAREN type ORPAREN .)
    BOOKMARK        reduce using rule 35 (type -> OLPAREN type ORPAREN .)
    GOTO            reduce using rule 35 (type -> OLPAREN type ORPAREN .)
    LPAREN          reduce using rule 35 (type -> OLPAREN type ORPAREN .)
    $end            reduce using rule 35 (type -> OLPAREN type ORPAREN .)
    BLOCK_END       reduce using rule 35 (type -> OLPAREN type ORPAREN .)
    CONDITION_ELSE  reduce using rule 35 (type -> OLPAREN type ORPAREN .)
    ORPAREN         reduce using rule 35 (type -> OLPAREN type ORPAREN .)
    RPAREN          reduce using rule 35 (type -> OLPAREN type ORPAREN .)


state 63

    (19) condition_def_else -> condition_def_else statement .
    (1) statement -> statement . statement
    (1) statement -> . statement statement
    (2) statement -> . type
    (3) statement -> . assign
    (4) statement -> . func_def BLOCK_END
    (5) statement -> . condition_def BLOCK_END
    (6) statement -> . bookmark
    (7) statement -> . goto
    (25) type -> . type PLUS type
    (26) type -> . type MINUS type
    (27) type -> . type TIMES type
    (28) type -> . type DIVIDE type
    (29) type -> . type GREATERTHEN type
    (30) type -> . type GREATERTHENEQUAL type
    (31) type -> . type LESSTHEN type
    (32) type -> . type LESSTHENEQUAL type
    (33) type -> . type NEGATION type
    (34) type -> . type EQUAL type
    (35) type -> . OLPAREN type ORPAREN
    (36) type -> . function
    (37) type -> . STRING
    (38) type -> . NUMBER
    (39) type -> . ID
    (21) assign -> . ID ASSIGN type
    (22) assign -> . assign assign
    (13) func_def -> . FUNCTION_DEF ID
    (14) func_def -> . FUNCTION_DEF ID assign
    (15) func_def -> . func_def statement
    (16) condition_def -> . CONDITION_DEF type
    (17) condition_def -> . condition_def statement
    (18) condition_def -> . condition_def condition_def_else
    (11) bookmark -> . BOOKMARK ID
    (12) goto -> . GOTO ID
    (8) function -> . LPAREN ID RPAREN
    (9) function -> . LPAREN ID assign RPAREN
    (10) function -> . function targ

  ! shift/reduce conflict for OLPAREN resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for FUNCTION_DEF resolved as shift
  ! shift/reduce conflict for CONDITION_DEF resolved as shift
  ! shift/reduce conflict for BOOKMARK resolved as shift
  ! shift/reduce conflict for GOTO resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    BLOCK_END       reduce using rule 19 (condition_def_else -> condition_def_else statement .)
    CONDITION_ELSE  reduce using rule 19 (condition_def_else -> condition_def_else statement .)
    OLPAREN         shift and go to state 15
    STRING          shift and go to state 2
    NUMBER          shift and go to state 11
    ID              shift and go to state 13
    FUNCTION_DEF    shift and go to state 14
    CONDITION_DEF   shift and go to state 1
    BOOKMARK        shift and go to state 4
    GOTO            shift and go to state 8
    LPAREN          shift and go to state 12

  ! OLPAREN         [ reduce using rule 19 (condition_def_else -> condition_def_else statement .) ]
  ! STRING          [ reduce using rule 19 (condition_def_else -> condition_def_else statement .) ]
  ! NUMBER          [ reduce using rule 19 (condition_def_else -> condition_def_else statement .) ]
  ! ID              [ reduce using rule 19 (condition_def_else -> condition_def_else statement .) ]
  ! FUNCTION_DEF    [ reduce using rule 19 (condition_def_else -> condition_def_else statement .) ]
  ! CONDITION_DEF   [ reduce using rule 19 (condition_def_else -> condition_def_else statement .) ]
  ! BOOKMARK        [ reduce using rule 19 (condition_def_else -> condition_def_else statement .) ]
  ! GOTO            [ reduce using rule 19 (condition_def_else -> condition_def_else statement .) ]
  ! LPAREN          [ reduce using rule 19 (condition_def_else -> condition_def_else statement .) ]

    function                       shift and go to state 7
    goto                           shift and go to state 9
    func_def                       shift and go to state 10
    bookmark                       shift and go to state 3
    statement                      shift and go to state 21
    condition_def                  shift and go to state 16
    type                           shift and go to state 6
    assign                         shift and go to state 17

state 64

    (9) function -> LPAREN ID assign RPAREN .

    TABARGU         reduce using rule 9 (function -> LPAREN ID assign RPAREN .)
    PLUS            reduce using rule 9 (function -> LPAREN ID assign RPAREN .)
    MINUS           reduce using rule 9 (function -> LPAREN ID assign RPAREN .)
    TIMES           reduce using rule 9 (function -> LPAREN ID assign RPAREN .)
    DIVIDE          reduce using rule 9 (function -> LPAREN ID assign RPAREN .)
    GREATERTHEN     reduce using rule 9 (function -> LPAREN ID assign RPAREN .)
    GREATERTHENEQUAL reduce using rule 9 (function -> LPAREN ID assign RPAREN .)
    LESSTHEN        reduce using rule 9 (function -> LPAREN ID assign RPAREN .)
    LESSTHENEQUAL   reduce using rule 9 (function -> LPAREN ID assign RPAREN .)
    NEGATION        reduce using rule 9 (function -> LPAREN ID assign RPAREN .)
    EQUAL           reduce using rule 9 (function -> LPAREN ID assign RPAREN .)
    OLPAREN         reduce using rule 9 (function -> LPAREN ID assign RPAREN .)
    STRING          reduce using rule 9 (function -> LPAREN ID assign RPAREN .)
    NUMBER          reduce using rule 9 (function -> LPAREN ID assign RPAREN .)
    ID              reduce using rule 9 (function -> LPAREN ID assign RPAREN .)
    FUNCTION_DEF    reduce using rule 9 (function -> LPAREN ID assign RPAREN .)
    CONDITION_DEF   reduce using rule 9 (function -> LPAREN ID assign RPAREN .)
    BOOKMARK        reduce using rule 9 (function -> LPAREN ID assign RPAREN .)
    GOTO            reduce using rule 9 (function -> LPAREN ID assign RPAREN .)
    LPAREN          reduce using rule 9 (function -> LPAREN ID assign RPAREN .)
    $end            reduce using rule 9 (function -> LPAREN ID assign RPAREN .)
    BLOCK_END       reduce using rule 9 (function -> LPAREN ID assign RPAREN .)
    CONDITION_ELSE  reduce using rule 9 (function -> LPAREN ID assign RPAREN .)
    ORPAREN         reduce using rule 9 (function -> LPAREN ID assign RPAREN .)
    RPAREN          reduce using rule 9 (function -> LPAREN ID assign RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 17 resolved as shift
WARNING: shift/reduce conflict for OLPAREN in state 21 resolved as shift
WARNING: shift/reduce conflict for STRING in state 21 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 21 resolved as shift
WARNING: shift/reduce conflict for ID in state 21 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_DEF in state 21 resolved as shift
WARNING: shift/reduce conflict for CONDITION_DEF in state 21 resolved as shift
WARNING: shift/reduce conflict for BOOKMARK in state 21 resolved as shift
WARNING: shift/reduce conflict for GOTO in state 21 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 21 resolved as shift
WARNING: shift/reduce conflict for TABARGU in state 32 resolved as shift
WARNING: shift/reduce conflict for OLPAREN in state 36 resolved as shift
WARNING: shift/reduce conflict for STRING in state 36 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 36 resolved as shift
WARNING: shift/reduce conflict for ID in state 36 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_DEF in state 36 resolved as shift
WARNING: shift/reduce conflict for CONDITION_DEF in state 36 resolved as shift
WARNING: shift/reduce conflict for BOOKMARK in state 36 resolved as shift
WARNING: shift/reduce conflict for GOTO in state 36 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 36 resolved as shift
WARNING: shift/reduce conflict for ID in state 39 resolved as shift
WARNING: shift/reduce conflict for OLPAREN in state 43 resolved as shift
WARNING: shift/reduce conflict for STRING in state 43 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 43 resolved as shift
WARNING: shift/reduce conflict for ID in state 43 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_DEF in state 43 resolved as shift
WARNING: shift/reduce conflict for CONDITION_DEF in state 43 resolved as shift
WARNING: shift/reduce conflict for BOOKMARK in state 43 resolved as shift
WARNING: shift/reduce conflict for GOTO in state 43 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 43 resolved as shift
WARNING: shift/reduce conflict for OLPAREN in state 44 resolved as shift
WARNING: shift/reduce conflict for STRING in state 44 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 44 resolved as shift
WARNING: shift/reduce conflict for ID in state 44 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_DEF in state 44 resolved as shift
WARNING: shift/reduce conflict for CONDITION_DEF in state 44 resolved as shift
WARNING: shift/reduce conflict for BOOKMARK in state 44 resolved as shift
WARNING: shift/reduce conflict for GOTO in state 44 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 44 resolved as shift
WARNING: shift/reduce conflict for ID in state 45 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 48 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 48 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 48 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 48 resolved as shift
WARNING: shift/reduce conflict for GREATERTHEN in state 48 resolved as shift
WARNING: shift/reduce conflict for GREATERTHENEQUAL in state 48 resolved as shift
WARNING: shift/reduce conflict for LESSTHEN in state 48 resolved as shift
WARNING: shift/reduce conflict for LESSTHENEQUAL in state 48 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 48 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 48 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 49 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 49 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 49 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 49 resolved as shift
WARNING: shift/reduce conflict for GREATERTHEN in state 49 resolved as shift
WARNING: shift/reduce conflict for GREATERTHENEQUAL in state 49 resolved as shift
WARNING: shift/reduce conflict for LESSTHEN in state 49 resolved as shift
WARNING: shift/reduce conflict for LESSTHENEQUAL in state 49 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 49 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 49 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 50 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 50 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 50 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 50 resolved as shift
WARNING: shift/reduce conflict for GREATERTHEN in state 50 resolved as shift
WARNING: shift/reduce conflict for GREATERTHENEQUAL in state 50 resolved as shift
WARNING: shift/reduce conflict for LESSTHEN in state 50 resolved as shift
WARNING: shift/reduce conflict for LESSTHENEQUAL in state 50 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 50 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 50 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 52 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 52 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 52 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 52 resolved as shift
WARNING: shift/reduce conflict for GREATERTHEN in state 52 resolved as shift
WARNING: shift/reduce conflict for GREATERTHENEQUAL in state 52 resolved as shift
WARNING: shift/reduce conflict for LESSTHEN in state 52 resolved as shift
WARNING: shift/reduce conflict for LESSTHENEQUAL in state 52 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 52 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 52 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 54 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 54 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 54 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 54 resolved as shift
WARNING: shift/reduce conflict for GREATERTHEN in state 54 resolved as shift
WARNING: shift/reduce conflict for GREATERTHENEQUAL in state 54 resolved as shift
WARNING: shift/reduce conflict for LESSTHEN in state 54 resolved as shift
WARNING: shift/reduce conflict for LESSTHENEQUAL in state 54 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 54 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 54 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 55 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 55 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 55 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 55 resolved as shift
WARNING: shift/reduce conflict for GREATERTHEN in state 55 resolved as shift
WARNING: shift/reduce conflict for GREATERTHENEQUAL in state 55 resolved as shift
WARNING: shift/reduce conflict for LESSTHEN in state 55 resolved as shift
WARNING: shift/reduce conflict for LESSTHENEQUAL in state 55 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 55 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 55 resolved as shift
WARNING: shift/reduce conflict for TABARGU in state 57 resolved as shift
WARNING: shift/reduce conflict for ID in state 61 resolved as shift
WARNING: shift/reduce conflict for OLPAREN in state 63 resolved as shift
WARNING: shift/reduce conflict for STRING in state 63 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 63 resolved as shift
WARNING: shift/reduce conflict for ID in state 63 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_DEF in state 63 resolved as shift
WARNING: shift/reduce conflict for CONDITION_DEF in state 63 resolved as shift
WARNING: shift/reduce conflict for BOOKMARK in state 63 resolved as shift
WARNING: shift/reduce conflict for GOTO in state 63 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 63 resolved as shift
